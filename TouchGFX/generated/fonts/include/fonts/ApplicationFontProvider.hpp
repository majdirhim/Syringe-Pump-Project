/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId DEFAULT = 0;
    static const touchgfx::FontId BUTTONSENG = 1;
    static const touchgfx::FontId TITLES = 2;
    static const touchgfx::FontId MEDIUMTITLE = 3;
    static const touchgfx::FontId BACKBUTTON = 4;
    static const touchgfx::FontId DISPLAY = 5;
    static const touchgfx::FontId MODE = 6;
    static const touchgfx::FontId KEYBOARD = 7;
    static const touchgfx::FontId MAINTEXT = 8;
    static const touchgfx::FontId ITALICARIAL14 = 9;
    static const touchgfx::FontId SMALLARIEL10 = 10;
    static const touchgfx::FontId LARGE = 11;
    static const touchgfx::FontId SMALL = 12;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId DEFAULT = 0;       // verdana_20_4bpp
    static const touchgfx::FontId BUTTONSENG = 1;    // AGENCYB_TTF_20_4bpp
    static const touchgfx::FontId TITLES = 2;        // AGENCYB_TTF_50_4bpp
    static const touchgfx::FontId MEDIUMTITLE = 3;   // AGENCYB_TTF_30_4bpp
    static const touchgfx::FontId BACKBUTTON = 4;    // AGENCYB_TTF_14_4bpp
    static const touchgfx::FontId DISPLAY = 5;       // AGENCYB_TTF_28_4bpp
    static const touchgfx::FontId MODE = 6;          // AGENCYB_TTF_24_4bpp
    static const touchgfx::FontId KEYBOARD = 1;      // AGENCYB_TTF_20_4bpp
    static const touchgfx::FontId MAINTEXT = 1;      // AGENCYB_TTF_20_4bpp
    static const touchgfx::FontId ITALICARIAL14 = 4; // AGENCYB_TTF_14_4bpp
    static const touchgfx::FontId SMALLARIEL10 = 7;  // AGENCYB_TTF_12_4bpp
    static const touchgfx::FontId LARGE = 8;         // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 9;         // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 10;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /* flashReader */)
    {
    }
    static touchgfx::FlashDataReader* getFlashReader()
    {
        return 0;
    }
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
