/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef STARTUPVIEWBASE_HPP
#define STARTUPVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/startup_screen/StartUpPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class StartUpViewBase : public touchgfx::View<StartUpPresenter>
{
public:
    StartUpViewBase();
    virtual ~StartUpViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void initSuccess(uint8_t value);
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void checkInitStatus()
    {
        // Override and implement this function in StartUp
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage ChildrenBackground;
    touchgfx::ScalableImage DarkBackground;
    touchgfx::ScalableImage DefaultBackground;
    touchgfx::MoveAnimator< touchgfx::ScalableImage > MediWaveLogo;
    touchgfx::FadeAnimator< touchgfx::Box > WhiteScreen;
    touchgfx::ModalWindow InitErrorPopUp;
    touchgfx::TextArea InitErrorMessage;
    touchgfx::Circle LoadingCercle;
    touchgfx::PainterRGB565 LoadingCerclePainter;
    touchgfx::TextArea textArea1;

private:

    /*
     * Delay Variable Declarations
     */
    static const uint16_t WAITFORINIT_DURATION = 60;
    uint16_t waitForInitCounter;
    /*
     * Interaction Callback Declarations
     */
    touchgfx::Callback < StartUpViewBase, const touchgfx::FadeAnimator<touchgfx::Box>& >  hideWhiteScreenEndedCallback;
    touchgfx::Callback < StartUpViewBase, const touchgfx::MoveAnimator<touchgfx::ScalableImage>& > moveLogoEndedCallback;


    /*
     * Interaction Handlers
     */
    void hideWhiteScreenEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::Box>& comp);
    void moveLogoEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ScalableImage>& comp);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // STARTUPVIEWBASE_HPP
