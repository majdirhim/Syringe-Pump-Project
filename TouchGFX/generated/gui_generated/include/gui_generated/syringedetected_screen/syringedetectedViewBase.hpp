/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SYRINGEDETECTEDVIEWBASE_HPP
#define SYRINGEDETECTEDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/syringedetected_screen/syringedetectedPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>

class syringedetectedViewBase : public touchgfx::View<syringedetectedPresenter>
{
public:
    syringedetectedViewBase();
    virtual ~syringedetectedViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage BackendBlack;
    touchgfx::ScalableImage BackendChildren;
    touchgfx::Image backend;
    touchgfx::ScalableImage scalableImage4;
    touchgfx::TextAreaWithOneWildcard SyrineDiameter;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  button;
    touchgfx::BoxProgress Syringe;
    touchgfx::TextAreaWithOneWildcard VolumeLeft;
    touchgfx::TextAreaWithOneWildcard InfusionVolume;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SYRINEDIAMETER_SIZE = 4;
    touchgfx::Unicode::UnicodeChar SyrineDiameterBuffer[SYRINEDIAMETER_SIZE];
    static const uint16_t VOLUMELEFT_SIZE = 4;
    touchgfx::Unicode::UnicodeChar VolumeLeftBuffer[VOLUMELEFT_SIZE];
    static const uint16_t INFUSIONVOLUME_SIZE = 4;
    touchgfx::Unicode::UnicodeChar InfusionVolumeBuffer[INFUSIONVOLUME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<syringedetectedViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SYRINGEDETECTEDVIEWBASE_HPP
