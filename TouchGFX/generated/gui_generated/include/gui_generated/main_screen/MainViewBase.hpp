/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/widgets/graph/GraphScroll.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <gui/containers/textbubble.hpp>
#include <gui/containers/ScreenBorder.hpp>
#include <gui/containers/Slide.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void InitKeyboard(uint8_t value);
    virtual void InfusionStartingTransition();
    virtual void InfusionStopingTransition();
    virtual void ChangeMotorMode(uint8_t value);

    /*
     * Virtual Action Handlers
     */
    virtual void LockScreen()
    {
        // Override and implement this function in Main
    }

    virtual void reactToClick(AbstractDataGraph::GraphClickEvent value)
    {
        // Override and implement this function in Main
    }

    virtual void CloseAlarmPopUp()
    {
        // Override and implement this function in Main
    }

    virtual void MuteSound()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage ChildrenBackground;
    touchgfx::ScalableImage DarkBackground;
    touchgfx::ScalableImage DefaultBackground;
    touchgfx::Container MainContainer;
    touchgfx::Box OpenMenuBtnBox;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  OpenMenuBtn;
    touchgfx::Box ChargeLevelIndicator;
    touchgfx::ScalableImage ChargeLevelBackground;
    touchgfx::Image ChargeSourceIndicator;
    touchgfx::Image ChargeStateIndicator;
    touchgfx::Box ConfigBtnsBox;
    touchgfx::ScalableImage Separator;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  VolumeBtn;
    touchgfx::TwoWildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  TimeBtn;
    touchgfx::TextArea volumebtntextArea;
    touchgfx::TextArea RatetextArea;
    touchgfx::TextArea RateUnittextArea;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  RateBtn;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  DrugBtn;
    touchgfx::TextArea DrugtextArea;
    touchgfx::TextAreaWithOneWildcard NametextArea;
    touchgfx::TextAreaWithTwoWildcards TimetextArea;
    touchgfx::TextArea timebtntextArea;
    touchgfx::ScalableImage Syringe;
    touchgfx::Image SyringePresentIndicator;
    touchgfx::Image SyringePresentNotConfigured;
    touchgfx::Image SyringeNotPresentIndicator;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  SyringeBtn;
    touchgfx::MoveAnimator< touchgfx::Container > StartButtonCotainer;
    touchgfx::Box StartBtnBox;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  StartBtn;
    touchgfx::Box StartStationBtnBox;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  StartStationBtn;
    touchgfx::Box PurgeBtnBox;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  PurgeBtn;
    touchgfx::MoveAnimator< touchgfx::Container > InfusionContainer;
    touchgfx::Box StopBtnBox;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  StopBtn;
    touchgfx::Box PauseBtnBox;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  PauseBtn;
    touchgfx::Box BolusBtnBox;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  BolusBtn;
    touchgfx::SwipeContainer SwipeContainer;
    touchgfx::Container swipeContainerPage1;
    touchgfx::TextAreaWithOneWildcard Injected;
    touchgfx::TextAreaWithTwoWildcards TimeLeft;
    touchgfx::Container SwipeContainerPage2;
    touchgfx::Box PressureBox;
    touchgfx::ScalableImage Dividor;
    touchgfx::TextAreaWithOneWildcard PressuretextArea;
    touchgfx::TextArea PressureTitletextArea;
    touchgfx::GraphScroll<100> dynamicGraph2;
    touchgfx::GraphElementLine dynamicGraph2Line1;
    touchgfx::PainterRGB565 dynamicGraph2Line1Painter;
    touchgfx::GraphElementGridY dynamicGraph2MajorYAxisGrid;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  OpenGraphBtn;
    touchgfx::Container Graphcontainer;
    touchgfx::Box GraphShadowBox;
    touchgfx::Box CloseGraphBtnBox;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  CloseGraphBtn;
    touchgfx::Box GraphBox;
    touchgfx::GraphScroll<100> dynamicGraph1;
    touchgfx::GraphElementDots dynamicGraph1Dots1;
    touchgfx::PainterRGB565 dynamicGraph1Dots1Painter;
    touchgfx::GraphElementLine dynamicGraph1Line1;
    touchgfx::PainterRGB565 dynamicGraph1Line1Painter;
    touchgfx::GraphElementGridY dynamicGraph1MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph1MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph1MajorYAxisLabel;
    textbubble textbubble2;
    textbubble textbubble1;
    touchgfx::Container AlarmContainer;
    ScreenBorder screenBorder1;
    touchgfx::Box AlarmBox;
    touchgfx::TextAreaWithOneWildcard AlarmTextArea;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  CloseAlarmBtn;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  MuteBtn;
    touchgfx::Box ShadowBox;
    touchgfx::MoveAnimator< touchgfx::Container > MenuButtonsContainer;
    Slide slideMenuBackGround;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  CloseMenuBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  SettingBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  ConfigBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  ActiveAlarmsBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  PatientBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  LockBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  >  HelpBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t NAMETEXTAREA_SIZE = 18;
    touchgfx::Unicode::UnicodeChar NametextAreaBuffer[NAMETEXTAREA_SIZE];
    static const uint16_t TIMETEXTAREABUFFER1_SIZE = 4;
    touchgfx::Unicode::UnicodeChar TimetextAreaBuffer1[TIMETEXTAREABUFFER1_SIZE];
    static const uint16_t TIMETEXTAREABUFFER2_SIZE = 4;
    touchgfx::Unicode::UnicodeChar TimetextAreaBuffer2[TIMETEXTAREABUFFER2_SIZE];
    static const uint16_t INJECTED_SIZE = 7;
    touchgfx::Unicode::UnicodeChar InjectedBuffer[INJECTED_SIZE];
    static const uint16_t TIMELEFTBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TimeLeftBuffer1[TIMELEFTBUFFER1_SIZE];
    static const uint16_t TIMELEFTBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TimeLeftBuffer2[TIMELEFTBUFFER2_SIZE];
    static const uint16_t PRESSURETEXTAREA_SIZE = 5;
    touchgfx::Unicode::UnicodeChar PressuretextAreaBuffer[PRESSURETEXTAREA_SIZE];
    static const uint16_t ALARMTEXTAREA_SIZE = 50;
    touchgfx::Unicode::UnicodeChar AlarmTextAreaBuffer[ALARMTEXTAREA_SIZE];
    static const uint16_t VOLUMEBTN_SIZE = 7;
    touchgfx::Unicode::UnicodeChar VolumeBtnBuffer[VOLUMEBTN_SIZE];
    static const uint16_t TIMEBTNBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TimeBtnBuffer1[TIMEBTNBUFFER1_SIZE];
    static const uint16_t TIMEBTNBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar TimeBtnBuffer2[TIMEBTNBUFFER2_SIZE];
    static const uint16_t RATEBTN_SIZE = 7;
    touchgfx::Unicode::UnicodeChar RateBtnBuffer[RATEBTN_SIZE];
    static const uint16_t DRUGBTN_SIZE = 18;
    touchgfx::Unicode::UnicodeChar DrugBtnBuffer[DRUGBTN_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphClickEvent&> graphClickedCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value);
    /*
     * Interaction Callback Declarations
     */
    touchgfx::Callback < MainViewBase, const touchgfx::MoveAnimator<touchgfx::Container>& > showMenuEndedCallback;
    touchgfx::Callback < MainViewBase, const touchgfx::MoveAnimator<touchgfx::Container>& > hideMenuEndedCallback;
    touchgfx::Callback < MainViewBase, const touchgfx::MoveAnimator<touchgfx::Container>& > hideStartButtonEndedCallback;
    touchgfx::Callback < MainViewBase, const touchgfx::MoveAnimator<touchgfx::Container>& > hideInfusionBtnsEndedCallback;


    /*
     * Interaction Handlers
     */
    void showMenuEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);
    void hideMenuEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);
    void hideStartButtonEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);
    void hideInfusionBtnsEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINVIEWBASE_HPP
