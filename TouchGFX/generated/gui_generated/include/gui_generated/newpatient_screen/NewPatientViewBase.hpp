/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef NEWPATIENTVIEWBASE_HPP
#define NEWPATIENTVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/newpatient_screen/NewPatientPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class NewPatientViewBase : public touchgfx::View<NewPatientPresenter>
{
public:
    NewPatientViewBase();
    virtual ~NewPatientViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void InitKeyPadUser(uint8_t value);

    /*
     * Virtual Action Handlers
     */
    virtual void SavePatientData()
    {
        // Override and implement this function in NewPatient
    }

    virtual void InitKeyboard()
    {
        // Override and implement this function in NewPatient
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage ChildrenBackground;
    touchgfx::ScalableImage DarkBackground;
    touchgfx::ScalableImage DefaultBackground;
    touchgfx::TextArea Title;
    touchgfx::Box BackBtnBox;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  BackBtn;
    touchgfx::ScalableImage BackArrow;
    touchgfx::TextArea Name;
    touchgfx::TextArea Age;
    touchgfx::TextArea Height;
    touchgfx::TextArea Weight;
    touchgfx::TextArea Gender;
    touchgfx::Box NameBox;
    touchgfx::Box AgeBox;
    touchgfx::Box HeightBox;
    touchgfx::Box WeightBox;
    touchgfx::Box GenderBox;
    touchgfx::Box SaveBtnBox;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  SaveBtn;
    touchgfx::TextArea HeightUnit;
    touchgfx::TextArea WeightUnit;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  NameBtn;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  AgeBtn;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  HeightBtn;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  WeightBtn;
    touchgfx::WildcardTextButtonStyle< touchgfx::ClickButtonTrigger >  GenderBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t NAMEBTN_SIZE = 18;
    touchgfx::Unicode::UnicodeChar NameBtnBuffer[NAMEBTN_SIZE];
    static const uint16_t AGEBTN_SIZE = 5;
    touchgfx::Unicode::UnicodeChar AgeBtnBuffer[AGEBTN_SIZE];
    static const uint16_t HEIGHTBTN_SIZE = 5;
    touchgfx::Unicode::UnicodeChar HeightBtnBuffer[HEIGHTBTN_SIZE];
    static const uint16_t WEIGHTBTN_SIZE = 5;
    touchgfx::Unicode::UnicodeChar WeightBtnBuffer[WEIGHTBTN_SIZE];
    static const uint16_t GENDERBTN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar GenderBtnBuffer[GENDERBTN_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<NewPatientViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // NEWPATIENTVIEWBASE_HPP
