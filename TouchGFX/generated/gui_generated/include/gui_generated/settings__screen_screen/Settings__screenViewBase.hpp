/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGS__SCREENVIEWBASE_HPP
#define SETTINGS__SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settings__screen_screen/Settings__screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/containers/popup_auto_diagnostic.hpp>

class Settings__screenViewBase : public touchgfx::View<Settings__screenPresenter>
{
public:
    Settings__screenViewBase();
    virtual ~Settings__screenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void goto_autodiagnosic()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void gotohistory()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void gotosound()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void soundtomain()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void goto_Displaymode()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void set_setting()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void goto_Language()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void displaychildren()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void displaydark()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void displaydefault()
    {
        // Override and implement this function in Settings__screen
    }

    virtual void gotomaintenance()
    {
        // Override and implement this function in Settings__screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage BackendBlack;
    touchgfx::ScalableImage BackendChildren;
    touchgfx::Image backend;
    touchgfx::TextAreaWithTwoWildcards textclock;
    touchgfx::TextAreaWithOneWildcard textclocksec;
    touchgfx::Container container_sound;
    touchgfx::Slider slider1_1;
    touchgfx::ToggleButton toggleButtonsound;
    touchgfx::TextArea textAreasound_1;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_Back_sound;
    touchgfx::Box box1_2;
    touchgfx::Container container_Language;
    touchgfx::ButtonWithLabel buttonWithLabelEN;
    touchgfx::ButtonWithLabel buttonWithLabelfrench;
    touchgfx::Box box1_3_1;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_Back_language;
    touchgfx::Container container_Display_mode;
    touchgfx::TextArea Display_Mode;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::ScalableImage scalableImage2_1_1;
    touchgfx::ScalableImage scalableImage2_2;
    touchgfx::Box box1_3;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_Back_displaymode;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  DisplayDefault;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  DisplayChildren;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  DisplayDark;
    popup_auto_diagnostic popup_auto_diagnostic1;
    touchgfx::Container container_setting;
    touchgfx::Box box1_1_4;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScalableImage scalableImage1_2;
    touchgfx::Box box1_1_4_1;
    touchgfx::ScalableImage scalableImage1_3;
    touchgfx::ScalableImage scalableImage1_2_1;
    touchgfx::Box box1_1_4_2;
    touchgfx::ScalableImage scalableImage1_4;
    touchgfx::ScalableImage scalableImage1_2_2;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Auto_Diagnostic;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Display_mode;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Time_Date;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Language;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Sound;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Manual;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Drug_Library;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Departement;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_history;
    touchgfx::Box box1_1;
    touchgfx::Box box1_1_1_1;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  flexButton2;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  Settings;
    touchgfx::Box box1;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  >  btn_Back;
    touchgfx::Box box1_1_4_2_1;
    touchgfx::ScalableImage scalableImage1_4_1;
    touchgfx::ScalableImage scalableImage1_4_1_1;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Battery;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_Lock;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  btn_maintenance;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTCLOCKBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textclockBuffer1[TEXTCLOCKBUFFER1_SIZE];
    static const uint16_t TEXTCLOCKBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textclockBuffer2[TEXTCLOCKBUFFER2_SIZE];
    static const uint16_t TEXTCLOCKSEC_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textclocksecBuffer[TEXTCLOCKSEC_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Settings__screenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Settings__screenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SETTINGS__SCREENVIEWBASE_HPP
