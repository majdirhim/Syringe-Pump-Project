/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef POPUP_TIME_DATEBASE_HPP
#define POPUP_TIME_DATEBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/CustomContainer1.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class popup_Time_DateBase : public touchgfx::Container
{
public:
    popup_Time_DateBase();
    virtual ~popup_Time_DateBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void buttonhourupclicked()
    {
        // Override and implement this function in popup_Time_Date
    }

    virtual void buttonhourdownclicked()
    {
        // Override and implement this function in popup_Time_Date
    }

    virtual void buttonminuteupclicked()
    {
        // Override and implement this function in popup_Time_Date
    }

    virtual void buttonminutedownclicked()
    {
        // Override and implement this function in popup_Time_Date
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image1;
    CustomContainer1 customContainer11;
    CustomContainer1 customContainer11_1;
    touchgfx::TextArea textareahourcaption;
    touchgfx::TextAreaWithOneWildcard textaearHour;
    touchgfx::TextArea textareaminutecaption;
    touchgfx::TextAreaWithOneWildcard textAreaminute;
    touchgfx::Button buttonhourup;
    touchgfx::Button buttonhourdown;
    touchgfx::Button buttonminuteup;
    touchgfx::Button buttonminutedown;
    touchgfx::ButtonWithLabel buttonclock;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAEARHOUR_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textaearHourBuffer[TEXTAEARHOUR_SIZE];
    static const uint16_t TEXTAREAMINUTE_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaminuteBuffer[TEXTAREAMINUTE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<popup_Time_DateBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // POPUP_TIME_DATEBASE_HPP
