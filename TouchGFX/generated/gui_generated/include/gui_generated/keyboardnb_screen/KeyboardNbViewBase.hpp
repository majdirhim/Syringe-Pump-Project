/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KEYBOARDNBVIEWBASE_HPP
#define KEYBOARDNBVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/keyboardnb_screen/KeyboardNbPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class KeyboardNbViewBase : public touchgfx::View<KeyboardNbPresenter>
{
public:
    KeyboardNbViewBase();
    virtual ~KeyboardNbViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ChangeScreen()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input0()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input1()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input2()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input3()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input4()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input5()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input6()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input7()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input8()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void Input9()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void InputComma()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void SaveData()
    {
        // Override and implement this function in KeyboardNb
    }

    virtual void EraseInput()
    {
        // Override and implement this function in KeyboardNb
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage ChildrenBackground;
    touchgfx::ScalableImage DarkBackground;
    touchgfx::ScalableImage DefaultBackground;
    touchgfx::Box BackBtnBox;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  BackBtn;
    touchgfx::ScalableImage BackArrow;
    touchgfx::ScalableImage KeyBoardBackground;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn7;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn4;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn5;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn8;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn9;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn6;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn3;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Btn0;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  BtnComma;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  EraseBtn;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  SaveBtn;
    touchgfx::ScalableImage InputBackground;
    touchgfx::TextAreaWithOneWildcard IntTextArea;
    touchgfx::TextAreaWithOneWildcard FloatTextArea;
    touchgfx::TextAreaWithOneWildcard UnitTextArea;
    touchgfx::TextAreaWithOneWildcard PasswordTextArea;

    /*
     * Wildcard Buffers
     */
    static const uint16_t INTTEXTAREA_SIZE = 5;
    touchgfx::Unicode::UnicodeChar IntTextAreaBuffer[INTTEXTAREA_SIZE];
    static const uint16_t FLOATTEXTAREA_SIZE = 3;
    touchgfx::Unicode::UnicodeChar FloatTextAreaBuffer[FLOATTEXTAREA_SIZE];
    static const uint16_t UNITTEXTAREA_SIZE = 10;
    touchgfx::Unicode::UnicodeChar UnitTextAreaBuffer[UNITTEXTAREA_SIZE];
    static const uint16_t PASSWORDTEXTAREA_SIZE = 19;
    touchgfx::Unicode::UnicodeChar PasswordTextAreaBuffer[PASSWORDTEXTAREA_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<KeyboardNbViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // KEYBOARDNBVIEWBASE_HPP
