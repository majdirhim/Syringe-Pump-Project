/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/startup_screen/startupView.hpp>
#include <gui/startup_screen/startupPresenter.hpp>
#include <gui/intro_screen/introView.hpp>
#include <gui/intro_screen/introPresenter.hpp>
#include <gui/new_paitent_screen/New_PaitentView.hpp>
#include <gui/new_paitent_screen/New_PaitentPresenter.hpp>
#include <gui/same_patient_screen/Same_PatientView.hpp>
#include <gui/same_patient_screen/Same_PatientPresenter.hpp>
#include <gui/specialmode_screen/SpecialModeView.hpp>
#include <gui/specialmode_screen/SpecialModePresenter.hpp>
#include <gui/screenkeyboard_screen/ScreenKeyboardView.hpp>
#include <gui/screenkeyboard_screen/ScreenKeyboardPresenter.hpp>
#include <gui/genderchoice_screen/genderchoiceView.hpp>
#include <gui/genderchoice_screen/genderchoicePresenter.hpp>
#include <gui/mainscreen_withstart_screen/mainScreen_WithSTARTView.hpp>
#include <gui/mainscreen_withstart_screen/mainScreen_WithSTARTPresenter.hpp>
#include <gui/testversion_screen/testVersionView.hpp>
#include <gui/testversion_screen/testVersionPresenter.hpp>
#include <gui/syringedetected_screen/syringedetectedView.hpp>
#include <gui/syringedetected_screen/syringedetectedPresenter.hpp>
#include <gui/settings__screen_screen/Settings__screenView.hpp>
#include <gui/settings__screen_screen/Settings__screenPresenter.hpp>
#include <gui/keyboardnb_screen/KeyboardNBView.hpp>
#include <gui/keyboardnb_screen/KeyboardNBPresenter.hpp>
#include <gui/settings_time_date_screen/Settings_Time_DateView.hpp>
#include <gui/settings_time_date_screen/Settings_Time_DatePresenter.hpp>
#include <gui/screenselectdrug_screen/ScreenselectdrugView.hpp>
#include <gui/screenselectdrug_screen/ScreenselectdrugPresenter.hpp>
#include <gui/oclusion_level_screen/Oclusion_levelView.hpp>
#include <gui/oclusion_level_screen/Oclusion_levelPresenter.hpp>
#include <gui/timeparam_screen/timeparamView.hpp>
#include <gui/timeparam_screen/timeparamPresenter.hpp>
#include <gui/alarmlist_screen/AlarmListView.hpp>
#include <gui/alarmlist_screen/AlarmListPresenter.hpp>
#include <gui/lockscreen_screen/LockScreenView.hpp>
#include <gui/lockscreen_screen/LockScreenPresenter.hpp>
#include <gui/logscreen_screen/LogScreenView.hpp>
#include <gui/logscreen_screen/LogScreenPresenter.hpp>
#include <gui/departement_screen/DepartementView.hpp>
#include <gui/departement_screen/DepartementPresenter.hpp>
#include <gui/druglibrary_screen/DrugLibraryView.hpp>
#include <gui/druglibrary_screen/DrugLibraryPresenter.hpp>
#include <gui/manual_screen/ManualView.hpp>
#include <gui/manual_screen/ManualPresenter.hpp>
#include <gui/battery_screen/BatteryView.hpp>
#include <gui/battery_screen/BatteryPresenter.hpp>
#include <gui/maintenance_screen/MaintenanceView.hpp>
#include <gui/maintenance_screen/MaintenancePresenter.hpp>
#include <gui/functiongeneration_screen/functiongenerationView.hpp>
#include <gui/functiongeneration_screen/functiongenerationPresenter.hpp>
#include <gui/intro_1_screen/intro_1View.hpp>
#include <gui/intro_1_screen/intro_1Presenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< startupView,
            touchgfx::meta::TypeList< introView,
            touchgfx::meta::TypeList< New_PaitentView,
            touchgfx::meta::TypeList< Same_PatientView,
            touchgfx::meta::TypeList< SpecialModeView,
            touchgfx::meta::TypeList< ScreenKeyboardView,
            touchgfx::meta::TypeList< genderchoiceView,
            touchgfx::meta::TypeList< mainScreen_WithSTARTView,
            touchgfx::meta::TypeList< testVersionView,
            touchgfx::meta::TypeList< syringedetectedView,
            touchgfx::meta::TypeList< Settings__screenView,
            touchgfx::meta::TypeList< KeyboardNBView,
            touchgfx::meta::TypeList< Settings_Time_DateView,
            touchgfx::meta::TypeList< ScreenselectdrugView,
            touchgfx::meta::TypeList< Oclusion_levelView,
            touchgfx::meta::TypeList< timeparamView,
            touchgfx::meta::TypeList< AlarmListView,
            touchgfx::meta::TypeList< LockScreenView,
            touchgfx::meta::TypeList< LogScreenView,
            touchgfx::meta::TypeList< DepartementView,
            touchgfx::meta::TypeList< DrugLibraryView,
            touchgfx::meta::TypeList< ManualView,
            touchgfx::meta::TypeList< BatteryView,
            touchgfx::meta::TypeList< MaintenanceView,
            touchgfx::meta::TypeList< functiongenerationView,
            touchgfx::meta::TypeList< intro_1View,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< startupPresenter,
            touchgfx::meta::TypeList< introPresenter,
            touchgfx::meta::TypeList< New_PaitentPresenter,
            touchgfx::meta::TypeList< Same_PatientPresenter,
            touchgfx::meta::TypeList< SpecialModePresenter,
            touchgfx::meta::TypeList< ScreenKeyboardPresenter,
            touchgfx::meta::TypeList< genderchoicePresenter,
            touchgfx::meta::TypeList< mainScreen_WithSTARTPresenter,
            touchgfx::meta::TypeList< testVersionPresenter,
            touchgfx::meta::TypeList< syringedetectedPresenter,
            touchgfx::meta::TypeList< Settings__screenPresenter,
            touchgfx::meta::TypeList< KeyboardNBPresenter,
            touchgfx::meta::TypeList< Settings_Time_DatePresenter,
            touchgfx::meta::TypeList< ScreenselectdrugPresenter,
            touchgfx::meta::TypeList< Oclusion_levelPresenter,
            touchgfx::meta::TypeList< timeparamPresenter,
            touchgfx::meta::TypeList< AlarmListPresenter,
            touchgfx::meta::TypeList< LockScreenPresenter,
            touchgfx::meta::TypeList< LogScreenPresenter,
            touchgfx::meta::TypeList< DepartementPresenter,
            touchgfx::meta::TypeList< DrugLibraryPresenter,
            touchgfx::meta::TypeList< ManualPresenter,
            touchgfx::meta::TypeList< BatteryPresenter,
            touchgfx::meta::TypeList< MaintenancePresenter,
            touchgfx::meta::TypeList< functiongenerationPresenter,
            touchgfx::meta::TypeList< intro_1Presenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotostartupScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
