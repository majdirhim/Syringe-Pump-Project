/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <touchgfx/transitions/WipeTransition.hpp>

#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/startup_screen/StartUpView.hpp>
#include <gui/startup_screen/StartUpPresenter.hpp>
#include <gui/home_screen/HomeView.hpp>
#include <gui/home_screen/HomePresenter.hpp>
#include <gui/newpatient_screen/NewPatientView.hpp>
#include <gui/newpatient_screen/NewPatientPresenter.hpp>
#include <gui/samepatient_screen/SamePatientView.hpp>
#include <gui/samepatient_screen/SamePatientPresenter.hpp>
#include <gui/specialmodes_screen/SpecialModesView.hpp>
#include <gui/specialmodes_screen/SpecialModesPresenter.hpp>
#include <gui/patientdatabase_screen/PatientDatabaseView.hpp>
#include <gui/patientdatabase_screen/PatientDatabasePresenter.hpp>
#include <gui/genderchoice_screen/GenderChoiceView.hpp>
#include <gui/genderchoice_screen/GenderChoicePresenter.hpp>
#include <gui/keyboard_screen/KeyboardView.hpp>
#include <gui/keyboard_screen/KeyboardPresenter.hpp>
#include <gui/keyboardnb_screen/KeyboardNbView.hpp>
#include <gui/keyboardnb_screen/KeyboardNbPresenter.hpp>
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <gui/activealarms_screen/ActiveAlarmsView.hpp>
#include <gui/activealarms_screen/ActiveAlarmsPresenter.hpp>
#include <gui/configuration_screen/ConfigurationView.hpp>
#include <gui/configuration_screen/ConfigurationPresenter.hpp>
#include <gui/perfusiontimesetting_screen/PerfusionTimeSettingView.hpp>
#include <gui/perfusiontimesetting_screen/PerfusionTimeSettingPresenter.hpp>
#include <gui/oclusionthresholds_screen/OclusionThresholdsView.hpp>
#include <gui/oclusionthresholds_screen/OclusionThresholdsPresenter.hpp>
#include <gui/settings_screen/SettingsView.hpp>
#include <gui/settings_screen/SettingsPresenter.hpp>
#include <gui/displaymode_screen/DisplayModeView.hpp>
#include <gui/displaymode_screen/DisplayModePresenter.hpp>
#include <gui/departements_screen/DepartementsView.hpp>
#include <gui/departements_screen/DepartementsPresenter.hpp>
#include <gui/battery_screen/BatteryView.hpp>
#include <gui/battery_screen/BatteryPresenter.hpp>
#include <gui/sound_screen/SoundView.hpp>
#include <gui/sound_screen/SoundPresenter.hpp>
#include <gui/language_screen/LanguageView.hpp>
#include <gui/language_screen/LanguagePresenter.hpp>
#include <gui/manual_screen/ManualView.hpp>
#include <gui/manual_screen/ManualPresenter.hpp>
#include <gui/log_screen/LogView.hpp>
#include <gui/log_screen/LogPresenter.hpp>
#include <gui/password_screen/PasswordView.hpp>
#include <gui/password_screen/PasswordPresenter.hpp>
#include <gui/druglibrary_screen/DrugLibraryView.hpp>
#include <gui/druglibrary_screen/DrugLibraryPresenter.hpp>
#include <gui/syringelibrary_screen/SyringeLibraryView.hpp>
#include <gui/syringelibrary_screen/SyringeLibraryPresenter.hpp>
#include <gui/syringeselection_screen/SyringeSelectionView.hpp>
#include <gui/syringeselection_screen/SyringeSelectionPresenter.hpp>
#include <gui/timeanddatesetting_screen/TimeAndDateSettingView.hpp>
#include <gui/timeanddatesetting_screen/TimeAndDateSettingPresenter.hpp>
#include <gui/maintenance_screen/MaintenanceView.hpp>
#include <gui/maintenance_screen/MaintenancePresenter.hpp>
#include <gui/diagnostic_screen/DiagnosticView.hpp>
#include <gui/diagnostic_screen/DiagnosticPresenter.hpp>
#include <gui/alarmandeventconfig_screen/AlarmAndEventConfigView.hpp>
#include <gui/alarmandeventconfig_screen/AlarmAndEventConfigPresenter.hpp>
#include <gui/transitions_screen/transitionsView.hpp>
#include <gui/transitions_screen/transitionsPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartUpView,
            touchgfx::meta::TypeList< HomeView,
            touchgfx::meta::TypeList< NewPatientView,
            touchgfx::meta::TypeList< SamePatientView,
            touchgfx::meta::TypeList< SpecialModesView,
            touchgfx::meta::TypeList< PatientDatabaseView,
            touchgfx::meta::TypeList< GenderChoiceView,
            touchgfx::meta::TypeList< KeyboardView,
            touchgfx::meta::TypeList< KeyboardNbView,
            touchgfx::meta::TypeList< MainView,
            touchgfx::meta::TypeList< ActiveAlarmsView,
            touchgfx::meta::TypeList< ConfigurationView,
            touchgfx::meta::TypeList< PerfusionTimeSettingView,
            touchgfx::meta::TypeList< OclusionThresholdsView,
            touchgfx::meta::TypeList< SettingsView,
            touchgfx::meta::TypeList< DisplayModeView,
            touchgfx::meta::TypeList< DepartementsView,
            touchgfx::meta::TypeList< BatteryView,
            touchgfx::meta::TypeList< SoundView,
            touchgfx::meta::TypeList< LanguageView,
            touchgfx::meta::TypeList< ManualView,
            touchgfx::meta::TypeList< LogView,
            touchgfx::meta::TypeList< PasswordView,
            touchgfx::meta::TypeList< DrugLibraryView,
            touchgfx::meta::TypeList< SyringeLibraryView,
            touchgfx::meta::TypeList< SyringeSelectionView,
            touchgfx::meta::TypeList< TimeAndDateSettingView,
            touchgfx::meta::TypeList< MaintenanceView,
            touchgfx::meta::TypeList< DiagnosticView,
            touchgfx::meta::TypeList< AlarmAndEventConfigView,
            touchgfx::meta::TypeList< transitionsView,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartUpPresenter,
            touchgfx::meta::TypeList< HomePresenter,
            touchgfx::meta::TypeList< NewPatientPresenter,
            touchgfx::meta::TypeList< SamePatientPresenter,
            touchgfx::meta::TypeList< SpecialModesPresenter,
            touchgfx::meta::TypeList< PatientDatabasePresenter,
            touchgfx::meta::TypeList< GenderChoicePresenter,
            touchgfx::meta::TypeList< KeyboardPresenter,
            touchgfx::meta::TypeList< KeyboardNbPresenter,
            touchgfx::meta::TypeList< MainPresenter,
            touchgfx::meta::TypeList< ActiveAlarmsPresenter,
            touchgfx::meta::TypeList< ConfigurationPresenter,
            touchgfx::meta::TypeList< PerfusionTimeSettingPresenter,
            touchgfx::meta::TypeList< OclusionThresholdsPresenter,
            touchgfx::meta::TypeList< SettingsPresenter,
            touchgfx::meta::TypeList< DisplayModePresenter,
            touchgfx::meta::TypeList< DepartementsPresenter,
            touchgfx::meta::TypeList< BatteryPresenter,
            touchgfx::meta::TypeList< SoundPresenter,
            touchgfx::meta::TypeList< LanguagePresenter,
            touchgfx::meta::TypeList< ManualPresenter,
            touchgfx::meta::TypeList< LogPresenter,
            touchgfx::meta::TypeList< PasswordPresenter,
            touchgfx::meta::TypeList< DrugLibraryPresenter,
            touchgfx::meta::TypeList< SyringeLibraryPresenter,
            touchgfx::meta::TypeList< SyringeSelectionPresenter,
            touchgfx::meta::TypeList< TimeAndDateSettingPresenter,
            touchgfx::meta::TypeList< MaintenancePresenter,
            touchgfx::meta::TypeList< DiagnosticPresenter,
            touchgfx::meta::TypeList< AlarmAndEventConfigPresenter,
            touchgfx::meta::TypeList< transitionsPresenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::TypeList< WipeTransition<EAST>,
            touchgfx::meta::TypeList< WipeTransition<WEST>,
            touchgfx::meta::TypeList< WipeTransition<SOUTH>,
            touchgfx::meta::TypeList< WipeTransition<NORTH>,
            touchgfx::meta::Nil > > > >
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartUpScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
