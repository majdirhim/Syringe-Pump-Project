/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LOCKSCREENVIEWBASE_HPP
#define LOCKSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/lockscreen_screen/LockScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class LockScreenViewBase : public touchgfx::View<LockScreenPresenter>
{
public:
    LockScreenViewBase();
    virtual ~LockScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void write1()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write2()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write0()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write3()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write4()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write5()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write6()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write7()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write8()
    {
        // Override and implement this function in LockScreen
    }

    virtual void write9()
    {
        // Override and implement this function in LockScreen
    }

    virtual void savedata()
    {
        // Override and implement this function in LockScreen
    }

    virtual void ChangePasswordF()
    {
        // Override and implement this function in LockScreen
    }

    virtual void LockF()
    {
        // Override and implement this function in LockScreen
    }

    virtual void IT_ERASE()
    {
        // Override and implement this function in LockScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage BackendChildren;
    touchgfx::ScalableImage BackendBlack;
    touchgfx::ScalableImage Backend;
    touchgfx::Container keybord;
    touchgfx::TextArea PasswordChangeSuccess;
    touchgfx::TextArea InsertNewPassword;
    touchgfx::TextArea InsertOldPassword;
    touchgfx::TextArea PasswordError;
    touchgfx::TextArea ScreenUnlocked;
    touchgfx::TextArea ScreenLocked;
    touchgfx::TextArea InsertPassword;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  ERASE;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  SET;
    touchgfx::ScalableImage scalableImage3;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::TextAreaWithOneWildcard textArea_centaine;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  ButtonPoint;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button9;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button0;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button6;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button7;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button4;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button8;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button5;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  Button3;
    touchgfx::Container Intro;
    touchgfx::Box box2;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  LockUnlock;
    touchgfx::Box box1;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  ChangePassword;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  Back;
    touchgfx::ScalableImage BackArrow;
    touchgfx::Box box3;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_CENTAINE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_centaineBuffer[TEXTAREA_CENTAINE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LockScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // LOCKSCREENVIEWBASE_HPP
