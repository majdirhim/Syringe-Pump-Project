/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/logscreen_screen/LogScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

LogScreenViewBase::LogScreenViewBase() :
    waitCounter(0),
    wait1Counter(0),
    wait2Counter(0),
    flexButtonCallback(this, &LogScreenViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    BackendBlack.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND3_ID));
    BackendBlack.setPosition(0, 0, 480, 272);
    BackendBlack.setVisible(false);
    BackendBlack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    BackendChildren.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND4_ID));
    BackendChildren.setPosition(0, 0, 481, 272);
    BackendChildren.setVisible(false);
    BackendChildren.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    Backend.setXY(0, 0);
    Backend.setBitmap(touchgfx::Bitmap(BITMAP_MINI_BACKEND2_ID));

    scrollableContainer1.setPosition(0, 48, 480, 192);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    list.setDirection(touchgfx::SOUTH);
    list.setPosition(0, 0, 250, 250);
    scrollableContainer1.add(list);
    scrollableContainer1.setScrollbarsPermanentlyVisible();

    WaitPopUp.setBackground(touchgfx::BitmapId(BITMAP_FLAT_HOURGLASS0_REMOVEBG_PREVIEW_ID), 208, 104);
    WaitPopUp.setShadeColor(touchgfx::Color::getColorFromRGB(5, 5, 5));
    WaitPopUp.setShadeAlpha(200);

    WaitAnimation.setXY(139, 72);
    WaitAnimation.setBitmaps(BITMAP_MINI_FLAT_HOURGLASS_0_ID, BITMAP_MINI_FLAT_HOURGLASS_321_ID);
    WaitAnimation.setUpdateTicksInterval(6);
    WaitAnimation.startAnimation(false, true, true);
    WaitPopUp.add(WaitAnimation);

    nodata.setPosition(30, 75, 258, 51);
    nodata.setVisible(false);
    nodata.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nodata.setLinespacing(0);
    nodata.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HL6H));
    WaitPopUp.add(nodata);

    box1_1.setPosition(304, 240, 95, 32);
    box1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1_1.setAlpha(90);

    btn_Next.setText(TypedText(T___SINGLEUSE_ILMM));
    btn_Next.setTextPosition(0, 6, 95, 32);
    btn_Next.setTextColors(touchgfx::Color::getColorFromRGB(245, 245, 245), touchgfx::Color::getColorFromRGB(242, 242, 242));
    btn_Next.setPosition(304, 240, 95, 32);
    btn_Next.setAction(flexButtonCallback);

    box1.setPosition(376, 8, 95, 32);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1.setAlpha(90);

    btn_Back.setIconBitmaps(Bitmap(BITMAP_GROUPE49_ID), Bitmap(BITMAP_GROUPE49_ID));
    btn_Back.setIconXY(16, 9);
    btn_Back.setText(TypedText(T___SINGLEUSE_6ZCR));
    btn_Back.setTextPosition(23, 6, 95, 32);
    btn_Back.setTextColors(touchgfx::Color::getColorFromRGB(245, 245, 245), touchgfx::Color::getColorFromRGB(242, 242, 242));
    btn_Back.setPosition(376, 8, 95, 32);
    btn_Back.setAction(flexButtonCallback);

    box1_1_1.setPosition(78, 240, 95, 32);
    box1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1_1_1.setAlpha(90);

    btn_Previous.setText(TypedText(T___SINGLEUSE_NASF));
    btn_Previous.setTextPosition(0, 6, 95, 32);
    btn_Previous.setTextColors(touchgfx::Color::getColorFromRGB(245, 245, 245), touchgfx::Color::getColorFromRGB(242, 242, 242));
    btn_Previous.setPosition(78, 240, 95, 32);
    btn_Previous.setAction(flexButtonCallback);

    add(__background);
    add(BackendBlack);
    add(BackendChildren);
    add(Backend);
    add(scrollableContainer1);
    add(WaitPopUp);
    add(box1_1);
    add(btn_Next);
    add(box1);
    add(btn_Back);
    add(box1_1_1);
    add(btn_Previous);
}

void LogScreenViewBase::setupScreen()
{

}

//Handles delays
void LogScreenViewBase::handleTickEvent()
{
    if(waitCounter > 0)
    {
        waitCounter--;
        if(waitCounter == 0)
        {
            //testdata
            //When wait completed call virtual function
            //Call testdata
            testdata();
        }
    }
    if(wait1Counter > 0)
    {
        wait1Counter--;
        if(wait1Counter == 0)
        {
            //testdata1
            //When wait1 completed call virtual function
            //Call testdataafteInit
            testdataafteInit();
        }
    }
    if(wait2Counter > 0)
    {
        wait2Counter--;
        if(wait2Counter == 0)
        {
            //testdata2
            //When wait2 completed call virtual function
            //Call testdataafteInit
            testdataafteInit();
        }
    }
}

//Called when the screen transition ends
void LogScreenViewBase::afterTransition()
{
    //Request
    //When screen transition ends call virtual function
    //Call RequestData
    RequestData();

    //wait
    //When Request completed delay
    //Delay for 1000 ms (60 Ticks)
    waitCounter = WAIT_DURATION;
}

void LogScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_Next)
    {
        //Requestnext
        //When btn_Next clicked call virtual function
        //Call RequestForward
        RequestForward();

        //showwidget
        //When Requestnext completed show WaitPopUp
        //Show WaitPopUp
        WaitPopUp.setVisible(true);
        WaitPopUp.invalidate();

        //widetanimate
        //When showwidget completed show WaitAnimation
        //Show WaitAnimation
        WaitAnimation.setVisible(true);
        WaitAnimation.invalidate();

        //wait1
        //When widetanimate completed delay
        //Delay for 1000 ms (60 Ticks)
        wait1Counter = WAIT1_DURATION;
    }
    else if (&src == &btn_Back)
    {
        //Back
        //When btn_Back clicked change screen to Settings__screen
        //Go to Settings__screen with no screen transition
        application().gotoSettings__screenScreenNoTransition();
    }
    else if (&src == &btn_Previous)
    {
        //Requestprevious
        //When btn_Previous clicked call virtual function
        //Call RequestBack
        RequestBack();

        //showwidget1
        //When Requestprevious completed show WaitPopUp
        //Show WaitPopUp
        WaitPopUp.setVisible(true);
        WaitPopUp.invalidate();

        //widgetanimate1
        //When showwidget1 completed show WaitAnimation
        //Show WaitAnimation
        WaitAnimation.setVisible(true);
        WaitAnimation.invalidate();

        //wait2
        //When widgetanimate1 completed delay
        //Delay for 1000 ms (60 Ticks)
        wait2Counter = WAIT2_DURATION;
    }
}
