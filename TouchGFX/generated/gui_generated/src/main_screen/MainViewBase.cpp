/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


MainViewBase::MainViewBase() :
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler),
    graphClickedCallback(this, &MainViewBase::graphClickedCallbackHandler),
    showMenuEndedCallback(this, &MainViewBase::showMenuEndedCallbackHandler),
    hideMenuEndedCallback(this, &MainViewBase::hideMenuEndedCallbackHandler),
    hideStartButtonEndedCallback(this, &MainViewBase::hideStartButtonEndedCallbackHandler),
    hideInfusionBtnsEndedCallback(this, &MainViewBase::hideInfusionBtnsEndedCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    ChildrenBackground.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND4_ID));
    ChildrenBackground.setPosition(0, 0, 480, 272);
    ChildrenBackground.setVisible(false);
    ChildrenBackground.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    DarkBackground.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND3_ID));
    DarkBackground.setPosition(0, 0, 480, 272);
    DarkBackground.setVisible(false);
    DarkBackground.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    DefaultBackground.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND2_ID));
    DefaultBackground.setPosition(0, 0, 480, 272);
    DefaultBackground.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    MainContainer.setPosition(0, 0, 482, 272);

    OpenMenuBtnBox.setPosition(448, 93, 32, 44);
    OpenMenuBtnBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    OpenMenuBtnBox.setAlpha(90);
    MainContainer.add(OpenMenuBtnBox);

    OpenMenuBtn.setIconBitmaps(Bitmap(BITMAP_IMAGE_ID), Bitmap(BITMAP_IMAGE_ID));
    OpenMenuBtn.setIconXY(2, 7);
    OpenMenuBtn.setPosition(448, 92, 32, 44);
    OpenMenuBtn.setAction(flexButtonCallback);
    MainContainer.add(OpenMenuBtn);

    ChargeLevelIndicator.setPosition(2, 2, 35, 16);
    ChargeLevelIndicator.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    MainContainer.add(ChargeLevelIndicator);

    ChargeLevelBackground.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LEVEL_ID));
    ChargeLevelBackground.setPosition(0, -7, 42, 35);
    ChargeLevelBackground.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    MainContainer.add(ChargeLevelBackground);

    ChargeSourceIndicator.setXY(37, -4);
    ChargeSourceIndicator.setBitmap(touchgfx::Bitmap(BITMAP_USB_CABLE_ID));
    MainContainer.add(ChargeSourceIndicator);

    ChargeStateIndicator.setXY(7, -2);
    ChargeStateIndicator.setBitmap(touchgfx::Bitmap(BITMAP_THUNDER_ID));
    MainContainer.add(ChargeStateIndicator);

    ConfigBtnsBox.setPosition(157, 154, 223, 39);
    ConfigBtnsBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ConfigBtnsBox.setAlpha(90);
    MainContainer.add(ConfigBtnsBox);

    Separator.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    Separator.setPosition(267, 154, 1, 39);
    Separator.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    MainContainer.add(Separator);

    VolumeBtn.setWildcardText(TypedText(T___SINGLEUSE_E5T7));
    Unicode::snprintf(VolumeBtnBuffer, VOLUMEBTN_SIZE, "%s", TypedText(T___SINGLEUSE_W98N).getText());
    VolumeBtn.setWildcardTextBuffer(VolumeBtnBuffer);
    VolumeBtn.setWildcardTextPosition(7, 18, 99, 39);
    VolumeBtn.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    VolumeBtn.setPosition(158, 154, 99, 39);
    VolumeBtn.setAction(flexButtonCallback);
    MainContainer.add(VolumeBtn);

    TimeBtn.setTwoWildcardText(TypedText(T___SINGLEUSE_EDJZ));
    Unicode::snprintf(TimeBtnBuffer1, TIMEBTNBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_MRVC).getText());
    TimeBtn.setWildcardTextBuffer1(TimeBtnBuffer1);
    Unicode::snprintf(TimeBtnBuffer2, TIMEBTNBUFFER2_SIZE, "%s", TypedText(T___SINGLEUSE_Q76S).getText());
    TimeBtn.setWildcardTextBuffer2(TimeBtnBuffer2);
    TimeBtn.setTwoWildcardTextPosition(3, 18, 99, 39);
    TimeBtn.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    TimeBtn.setPosition(281, 154, 99, 39);
    TimeBtn.setAction(flexButtonCallback);
    MainContainer.add(TimeBtn);

    volumebtntextArea.setXY(180, 155);
    volumebtntextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    volumebtntextArea.setLinespacing(0);
    volumebtntextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7TMR));
    MainContainer.add(volumebtntextArea);

    RatetextArea.setXY(356, 113);
    RatetextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    RatetextArea.setLinespacing(0);
    RatetextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9LRO));
    MainContainer.add(RatetextArea);

    RateUnittextArea.setXY(264, 86);
    RateUnittextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    RateUnittextArea.setLinespacing(0);
    RateUnittextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CRI4));
    MainContainer.add(RateUnittextArea);

    RateBtn.setWildcardText(TypedText(T___SINGLEUSE_COM5));
    Unicode::snprintf(RateBtnBuffer, RATEBTN_SIZE, "%s", TypedText(T___SINGLEUSE_FJI1).getText());
    RateBtn.setWildcardTextBuffer(RateBtnBuffer);
    RateBtn.setWildcardTextPosition(7, 5, 137, 64);
    RateBtn.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    RateBtn.setPosition(123, 82, 137, 64);
    RateBtn.setAction(flexButtonCallback);
    MainContainer.add(RateBtn);

    DrugBtn.setWildcardText(TypedText(T___SINGLEUSE_0AUG));
    Unicode::snprintf(DrugBtnBuffer, DRUGBTN_SIZE, "%s", TypedText(T___SINGLEUSE_51DX).getText());
    DrugBtn.setWildcardTextBuffer(DrugBtnBuffer);
    DrugBtn.setWildcardTextPosition(7, -3, 222, 31);
    DrugBtn.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    DrugBtn.setPosition(130, 46, 222, 31);
    DrugBtn.setAction(flexButtonCallback);
    MainContainer.add(DrugBtn);

    DrugtextArea.setXY(230, 29);
    DrugtextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DrugtextArea.setLinespacing(0);
    DrugtextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SB7F));
    MainContainer.add(DrugtextArea);

    NametextArea.setPosition(147, 2, 189, 26);
    NametextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    NametextArea.setLinespacing(0);
    NametextAreaBuffer[0] = 0;
    NametextArea.setWildcard(NametextAreaBuffer);
    NametextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A0NY));
    MainContainer.add(NametextArea);

    TimetextArea.setPosition(290, 2, 121, 26);
    TimetextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TimetextArea.setLinespacing(0);
    touchgfx::Unicode::snprintf(TimetextAreaBuffer1, TIMETEXTAREABUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IREQ).getText());
    TimetextArea.setWildcard1(TimetextAreaBuffer1);
    touchgfx::Unicode::snprintf(TimetextAreaBuffer2, TIMETEXTAREABUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_40NG).getText());
    TimetextArea.setWildcard2(TimetextAreaBuffer2);
    TimetextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1K2I));
    MainContainer.add(TimetextArea);

    timebtntextArea.setXY(297, 154);
    timebtntextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    timebtntextArea.setLinespacing(0);
    timebtntextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O1JO));
    MainContainer.add(timebtntextArea);

    Syringe.setBitmap(touchgfx::Bitmap(BITMAP_SYRINGE_ID));
    Syringe.setPosition(3, 51, 32, 32);
    Syringe.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    MainContainer.add(Syringe);

    SyringePresentIndicator.setXY(13, 63);
    SyringePresentIndicator.setVisible(false);
    SyringePresentIndicator.setBitmap(touchgfx::Bitmap(BITMAP_CHECK_ID));
    MainContainer.add(SyringePresentIndicator);

    SyringePresentNotConfigured.setXY(13, 59);
    SyringePresentNotConfigured.setVisible(false);
    SyringePresentNotConfigured.setBitmap(touchgfx::Bitmap(BITMAP_WARNING_ID));
    MainContainer.add(SyringePresentNotConfigured);

    SyringeNotPresentIndicator.setXY(2, 51);
    SyringeNotPresentIndicator.setVisible(false);
    SyringeNotPresentIndicator.setBitmap(touchgfx::Bitmap(BITMAP_TRAFFIC_SIGNAL_ID));
    MainContainer.add(SyringeNotPresentIndicator);

    SyringeBtn.setBoxWithBorderPosition(0, 0, 50, 50);
    SyringeBtn.setBorderSize(5);
    SyringeBtn.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    SyringeBtn.setPosition(2, 39, 50, 50);
    SyringeBtn.setAlpha(0);
    SyringeBtn.setAction(flexButtonCallback);
    MainContainer.add(SyringeBtn);

    StartButtonCotainer.setPosition(2, 116, 115, 154);

    StartBtnBox.setPosition(0, 106, 115, 50);
    StartBtnBox.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
    StartBtnBox.setAlpha(90);
    StartButtonCotainer.add(StartBtnBox);

    StartBtn.setText(TypedText(T___SINGLEUSE_ETUA));
    StartBtn.setTextPosition(-1, 1, 115, 50);
    StartBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    StartBtn.setIconBitmaps(Bitmap(BITMAP_PLAY_BUTTON_ID), Bitmap(BITMAP_PLAY_BUTTON_ID));
    StartBtn.setIconXY(52, 28);
    StartBtn.setPosition(0, 106, 115, 50);
    StartBtn.setAction(flexButtonCallback);
    StartButtonCotainer.add(StartBtn);

    StartStationBtnBox.setPosition(0, 55, 115, 50);
    StartStationBtnBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    StartStationBtnBox.setAlpha(90);
    StartButtonCotainer.add(StartStationBtnBox);

    StartStationBtn.setText(TypedText(T___SINGLEUSE_HXGG));
    StartStationBtn.setTextPosition(-1, 6, 115, 50);
    StartStationBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    StartStationBtn.setIconBitmaps(Bitmap(BITMAP_PLAY_BUTTON_ID), Bitmap(BITMAP_PLAY_BUTTON_ID));
    StartStationBtn.setIconXY(52, 28);
    StartStationBtn.setPosition(0, 55, 115, 50);
    StartButtonCotainer.add(StartStationBtn);

    PurgeBtnBox.setPosition(0, 4, 115, 50);
    PurgeBtnBox.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
    PurgeBtnBox.setAlpha(90);
    StartButtonCotainer.add(PurgeBtnBox);

    PurgeBtn.setText(TypedText(T___SINGLEUSE_QOOR));
    PurgeBtn.setTextPosition(-1, 1, 115, 50);
    PurgeBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    PurgeBtn.setIconBitmaps(Bitmap(BITMAP_PLAY_BUTTON_ID), Bitmap(BITMAP_PLAY_BUTTON_ID));
    PurgeBtn.setIconXY(52, 28);
    PurgeBtn.setPosition(0, 4, 115, 50);
    StartButtonCotainer.add(PurgeBtn);
    MainContainer.add(StartButtonCotainer);

    InfusionContainer.setPosition(-120, 57, 115, 213);

    StopBtnBox.setPosition(0, 164, 115, 50);
    StopBtnBox.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    StopBtnBox.setAlpha(157);
    InfusionContainer.add(StopBtnBox);

    StopBtn.setText(TypedText(T___SINGLEUSE_JCCV));
    StopBtn.setTextPosition(2, 0, 115, 50);
    StopBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    StopBtn.setIconBitmaps(Bitmap(BITMAP_STOP_BUTTON_ID), Bitmap(BITMAP_STOP_BUTTON_ID));
    StopBtn.setIconXY(45, 23);
    StopBtn.setPosition(0, 164, 115, 50);
    StopBtn.setAction(flexButtonCallback);
    InfusionContainer.add(StopBtn);

    PauseBtnBox.setPosition(0, 113, 115, 50);
    PauseBtnBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PauseBtnBox.setAlpha(90);
    InfusionContainer.add(PauseBtnBox);

    PauseBtn.setText(TypedText(T___SINGLEUSE_PYAX));
    PauseBtn.setTextPosition(2, -3, 115, 50);
    PauseBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    PauseBtn.setIconBitmaps(Bitmap(BITMAP_VIDEO_PAUSE_BUTTON_ID), Bitmap(BITMAP_VIDEO_PAUSE_BUTTON_ID));
    PauseBtn.setIconXY(47, 21);
    PauseBtn.setPosition(0, 113, 115, 50);
    InfusionContainer.add(PauseBtn);

    BolusBtnBox.setPosition(0, 62, 115, 50);
    BolusBtnBox.setColor(touchgfx::Color::getColorFromRGB(235, 235, 235));
    BolusBtnBox.setAlpha(92);
    InfusionContainer.add(BolusBtnBox);

    BolusBtn.setText(TypedText(T___SINGLEUSE_MT9L));
    BolusBtn.setTextPosition(0, -2, 115, 50);
    BolusBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    BolusBtn.setIconBitmaps(Bitmap(BITMAP_FAST_FORWARD_ID), Bitmap(BITMAP_FAST_FORWARD_ID));
    BolusBtn.setIconXY(48, 21);
    BolusBtn.setPosition(0, 62, 115, 50);
    BolusBtn.setAction(flexButtonCallback);
    InfusionContainer.add(BolusBtn);
    MainContainer.add(InfusionContainer);

    SwipeContainer.setXY(158, 195);
    SwipeContainer.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID), touchgfx::Bitmap(BITMAP_DARK_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID));
    SwipeContainer.setPageIndicatorXY(0, 0);
    SwipeContainer.setSwipeCutoff(50);
    SwipeContainer.setEndSwipeElasticWidth(50);

    swipeContainerPage1.setWidth(322);
    swipeContainerPage1.setHeight(78);

    Injected.setXY(3, 34);
    Injected.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Injected.setLinespacing(0);
    Unicode::snprintf(InjectedBuffer, INJECTED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_40PE).getText());
    Injected.setWildcard(InjectedBuffer);
    Injected.resizeToCurrentText();
    Injected.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I2ME));
    swipeContainerPage1.add(Injected);

    TimeLeft.setXY(238, 34);
    TimeLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TimeLeft.setLinespacing(0);
    touchgfx::Unicode::snprintf(TimeLeftBuffer1, TIMELEFTBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GXLY).getText());
    TimeLeft.setWildcard1(TimeLeftBuffer1);
    touchgfx::Unicode::snprintf(TimeLeftBuffer2, TIMELEFTBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0DX6).getText());
    TimeLeft.setWildcard2(TimeLeftBuffer2);
    TimeLeft.resizeToCurrentText();
    TimeLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CI4C));
    swipeContainerPage1.add(TimeLeft);
    SwipeContainer.add(swipeContainerPage1);

    SwipeContainerPage2.setWidth(322);
    SwipeContainerPage2.setHeight(78);

    PressureBox.setPosition(-1, 0, 323, 75);
    PressureBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PressureBox.setAlpha(90);
    SwipeContainerPage2.add(PressureBox);

    Dividor.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    Dividor.setPosition(91, 23, 1, 52);
    Dividor.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    SwipeContainerPage2.add(Dividor);

    PressuretextArea.setPosition(9, 50, 71, 17);
    PressuretextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PressuretextArea.setLinespacing(0);
    Unicode::snprintf(PressuretextAreaBuffer, PRESSURETEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W3UZ).getText());
    PressuretextArea.setWildcard(PressuretextAreaBuffer);
    PressuretextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J161));
    SwipeContainerPage2.add(PressuretextArea);

    PressureTitletextArea.setXY(6, 33);
    PressureTitletextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PressureTitletextArea.setLinespacing(0);
    PressureTitletextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FALA));
    SwipeContainerPage2.add(PressureTitletextArea);

    dynamicGraph2.setScale(1);
    dynamicGraph2.setPosition(92, 23, 231, 52);
    dynamicGraph2.setGraphAreaMargin(0, 0, 0, 0);
    dynamicGraph2.setGraphAreaPadding(4, 0, 0, 4);
    dynamicGraph2.setGraphRangeY(0, 1200);

    dynamicGraph2MajorYAxisGrid.setScale(1);
    dynamicGraph2MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dynamicGraph2MajorYAxisGrid.setInterval(400);
    dynamicGraph2MajorYAxisGrid.setLineWidth(1);
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);

    dynamicGraph2Line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dynamicGraph2Line1.setPainter(dynamicGraph2Line1Painter);
    dynamicGraph2Line1.setLineWidth(2);
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);

    dynamicGraph2.addDataPoint(609.9475953485935f);
    dynamicGraph2.addDataPoint(524.0281837801642f);
    dynamicGraph2.addDataPoint(467.5894434149019f);
    dynamicGraph2.addDataPoint(466.25618102464847f);
    dynamicGraph2.addDataPoint(531.2569897961321f);
    dynamicGraph2.addDataPoint(656.2405118069764f);
    dynamicGraph2.addDataPoint(818.4491705837222f);
    dynamicGraph2.addDataPoint(983.9783935410316f);
    dynamicGraph2.addDataPoint(1115.8459942642446f);
    dynamicGraph2.addDataPoint(1182.9053728286115f);
    dynamicGraph2.addDataPoint(1167.4258749287028f);
    dynamicGraph2.addDataPoint(1069.4861938181193f);
    dynamicGraph2.addDataPoint(907.1030452723237f);
    dynamicGraph2.addDataPoint(712.0577476692317f);
    dynamicGraph2.addDataPoint(522.4330398142006f);
    dynamicGraph2.addDataPoint(373.6746091487627f);
    dynamicGraph2.addDataPoint(290.3505891975738f);
    dynamicGraph2.addDataPoint(280.6089162261527f);
    dynamicGraph2.addDataPoint(334.67093003393916f);
    dynamicGraph2.addDataPoint(427.710484404514f);
    dynamicGraph2.addDataPoint(526.3942531519501f);
    dynamicGraph2.addDataPoint(597.4637012256643f);
    dynamicGraph2.addDataPoint(616.2405698767294f);
    dynamicGraph2.addDataPoint(572.9591497201843f);
    dynamicGraph2.addDataPoint(475.363316877534f);
    dynamicGraph2.addDataPoint(346.9242900845261f);
    dynamicGraph2.addDataPoint(221.11094937919773f);
    dynamicGraph2.addDataPoint(133.11486038855833f);
    dynamicGraph2.addDataPoint(111.05921600436724f);
    dynamicGraph2.addDataPoint(168.8510030079117f);
    dynamicGraph2.addDataPoint(302.4369821378911f);
    dynamicGraph2.addDataPoint(490.39350527365684f);
    dynamicGraph2.addDataPoint(698.7220103282632f);
    dynamicGraph2.addDataPoint(888.6938440174949f);
    dynamicGraph2.addDataPoint(1025.8428998935644f);
    dynamicGraph2.addDataPoint(1087.9239572564545f);
    dynamicGraph2.addDataPoint(1069.9071902762157f);
    dynamicGraph2.addDataPoint(984.8042572083164f);
    dynamicGraph2.addDataPoint(860.1396907797969f);
    dynamicGraph2.addDataPoint(730.9452856419199f);
    dynamicGraph2.addDataPoint(631.0033282198058f);
    dynamicGraph2.addDataPoint(584.489750251651f);
    dynamicGraph2.addDataPoint(600.0667152001122f);
    dynamicGraph2.addDataPoint(668.8704881563012f);
    dynamicGraph2.addDataPoint(766.8829343175685f);
    dynamicGraph2.addDataPoint(861.0979071087913f);
    dynamicGraph2.addDataPoint(917.9615231644594f);
    dynamicGraph2.addDataPoint(912.0053513300886f);
    dynamicGraph2.addDataPoint(832.542303622839f);
    dynamicGraph2.addDataPoint(686.7674306174572f);
    dynamicGraph2.addDataPoint(498.4850439824403f);
    dynamicGraph2.addDataPoint(302.75452921736405f);
    dynamicGraph2.addDataPoint(137.74661079311053f);
    dynamicGraph2.addDataPoint(35.786593482184f);
    dynamicGraph2.addDataPoint(15.76190749900718f);
    dynamicGraph2.addDataPoint(78.74001088964056f);
    dynamicGraph2.addDataPoint(207.8599594642817f);
    dynamicGraph2.addDataPoint(372.51801938980725f);
    dynamicGraph2.addDataPoint(535.8203000615389f);
    dynamicGraph2.addDataPoint(663.4792960526601f);
    dynamicGraph2.addDataPoint(731.9816691982699f);
    dynamicGraph2.addDataPoint(734.0364424164459f);
    dynamicGraph2.addDataPoint(679.9821571161391f);
    dynamicGraph2.addDataPoint(594.823400642887f);
    dynamicGraph2.addDataPoint(511.6395429224933f);
    dynamicGraph2.addDataPoint(462.998257079559f);
    dynamicGraph2.addDataPoint(472.495322958256f);
    dynamicGraph2.addDataPoint(548.5117010676948f);
    dynamicGraph2.addDataPoint(681.7347323186106f);
    dynamicGraph2.addDataPoint(847.0674774502986f);
    dynamicGraph2.addDataPoint(1009.4735277497176f);
    dynamicGraph2.addDataPoint(1132.3381233179186f);
    dynamicGraph2.addDataPoint(1186.307244964479f);
    dynamicGraph2.addDataPoint(1156.445484091625f);
    dynamicGraph2.addDataPoint(1045.961413520814f);
    dynamicGraph2.addDataPoint(875.5855527215338f);
    dynamicGraph2.addDataPoint(678.7467988473934f);
    dynamicGraph2.addDataPoint(493.7181306126185f);
    dynamicGraph2.addDataPoint(354.64154038342105f);
    dynamicGraph2.addDataPoint(283.61380438955484f);
    dynamicGraph2.addDataPoint(285.7529340442252f);
    dynamicGraph2.addDataPoint(348.43442115116676f);
    dynamicGraph2.addDataPoint(444.86452067588823f);
    dynamicGraph2.addDataPoint(541.0966823499084f);
    dynamicGraph2.addDataPoint(604.7549715381479f);
    dynamicGraph2.addDataPoint(613.3122133510384f);
    dynamicGraph2.addDataPoint(559.8821992898911f);
    dynamicGraph2.addDataPoint(455.09665102055595f);
    dynamicGraph2.addDataPoint(324.5998873794006f);
    dynamicGraph2.addDataPoint(202.77062038140522f);
    dynamicGraph2.addDataPoint(124.20804423493749f);
    dynamicGraph2.addDataPoint(115.07051040535467f);
    dynamicGraph2.addDataPoint(186.3950616205337f);
    dynamicGraph2.addDataPoint(331.04434751110523f);
    dynamicGraph2.addDataPoint(525.0424289310633f);
    dynamicGraph2.addDataPoint(732.9889318119539f);
    dynamicGraph2.addDataPoint(916.243955432194f);
    dynamicGraph2.addDataPoint(1041.8992527013052f);
    dynamicGraph2.addDataPoint(1090.3585235028709f);
    dynamicGraph2.addDataPoint(1059.6900024609877f);
    SwipeContainerPage2.add(dynamicGraph2);

    OpenGraphBtn.setIconBitmaps(Bitmap(BITMAP_EXPAND_ID), Bitmap(BITMAP_EXPAND_ID));
    OpenGraphBtn.setIconXY(0, 0);
    OpenGraphBtn.setPosition(298, -1, 24, 24);
    OpenGraphBtn.setAction(flexButtonCallback);
    SwipeContainerPage2.add(OpenGraphBtn);
    SwipeContainer.add(SwipeContainerPage2);
    SwipeContainer.setSelectedPage(0);
    MainContainer.add(SwipeContainer);

    Graphcontainer.setPosition(0, 0, 482, 271);
    Graphcontainer.setVisible(false);

    GraphShadowBox.setPosition(-2, -4, 482, 277);
    GraphShadowBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    GraphShadowBox.setAlpha(171);
    Graphcontainer.add(GraphShadowBox);

    CloseGraphBtnBox.setPosition(192, 10, 98, 32);
    CloseGraphBtnBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    CloseGraphBtnBox.setAlpha(90);
    Graphcontainer.add(CloseGraphBtnBox);

    CloseGraphBtn.setText(TypedText(T___SINGLEUSE_V1TP));
    CloseGraphBtn.setTextPosition(0, 6, 98, 32);
    CloseGraphBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    CloseGraphBtn.setPosition(192, 10, 98, 32);
    CloseGraphBtn.setAction(flexButtonCallback);
    Graphcontainer.add(CloseGraphBtn);

    GraphBox.setPosition(0, 51, 480, 219);
    GraphBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    GraphBox.setAlpha(90);
    Graphcontainer.add(GraphBox);

    dynamicGraph1.setScale(1);
    dynamicGraph1.setPosition(0, 51, 480, 223);
    dynamicGraph1.setGraphAreaMargin(5, 23, 15, 19);
    dynamicGraph1.setGraphAreaPadding(0, 0, 14, 4);
    dynamicGraph1.setGraphRangeY(0, 1200);
    dynamicGraph1.setClickAction(graphClickedCallback);

    dynamicGraph1MajorYAxisGrid.setScale(1);
    dynamicGraph1MajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dynamicGraph1MajorYAxisGrid.setInterval(400);
    dynamicGraph1MajorYAxisGrid.setLineWidth(1);
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);

    dynamicGraph1MajorXAxisLabel.setScale(1);
    dynamicGraph1MajorXAxisLabel.setInterval(10);
    dynamicGraph1MajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_JFUW));
    dynamicGraph1MajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);

    dynamicGraph1MajorYAxisLabel.setScale(1);
    dynamicGraph1MajorYAxisLabel.setInterval(120);
    dynamicGraph1MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_3G5M));
    dynamicGraph1MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);

    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dynamicGraph1Line1.setPainter(dynamicGraph1Line1Painter);
    dynamicGraph1Line1.setLineWidth(2);
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);

    dynamicGraph1Dots1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 149, 255));
    dynamicGraph1Dots1.setPainter(dynamicGraph1Dots1Painter);
    dynamicGraph1Dots1.setDotWidth(4);
    dynamicGraph1.addGraphElement(dynamicGraph1Dots1);

    dynamicGraph1.addDataPoint(723.1400730267775f);
    dynamicGraph1.addDataPoint(738.8545761384077f);
    dynamicGraph1.addDataPoint(694.9132066198067f);
    dynamicGraph1.addDataPoint(613.6876341417187f);
    dynamicGraph1.addDataPoint(527.2379653927521f);
    dynamicGraph1.addDataPoint(468.978018147082f);
    dynamicGraph1.addDataPoint(465.00616317624736f);
    dynamicGraph1.addDataPoint(527.2437332998461f);
    dynamicGraph1.addDataPoint(650.0797804763419f);
    dynamicGraph1.addDataPoint(811.36101503997f);
    dynamicGraph1.addDataPoint(977.4999216186801f);
    dynamicGraph1.addDataPoint(1111.4629458879185f);
    dynamicGraph1.addDataPoint(1181.692364457866f);
    dynamicGraph1.addDataPoint(1169.7832351219108f);
    dynamicGraph1.addDataPoint(1075.0378231069544f);
    dynamicGraph1.addDataPoint(914.7804890578795f);
    dynamicGraph1.addDataPoint(720.3502041951307f);
    dynamicGraph1.addDataPoint(529.7425342698622f);
    dynamicGraph1.addDataPoint(378.69001533793914f);
    dynamicGraph1.addDataPoint(292.3495432888491f);
    dynamicGraph1.addDataPoint(279.61454030090147f);
    dynamicGraph1.addDataPoint(331.42573757108687f);
    dynamicGraph1.addDataPoint(423.47467210149046f);
    dynamicGraph1.addDataPoint(522.6186155000055f);
    dynamicGraph1.addDataPoint(595.4179162841737f);
    dynamicGraph1.addDataPoint(616.6885877824989f);
    dynamicGraph1.addDataPoint(575.9616575751668f);
    dynamicGraph1.addDataPoint(480.2560830646387f);
    dynamicGraph1.addDataPoint(352.47796946902673f);
    dynamicGraph1.addDataPoint(225.83332569358265f);
    dynamicGraph1.addDataPoint(135.62147079374296f);
    dynamicGraph1.addDataPoint(110.42141000325219f);
    dynamicGraph1.addDataPoint(164.83587819416286f);
    dynamicGraph1.addDataPoint(295.5799028304008f);
    dynamicGraph1.addDataPoint(481.8848928417248f);
    dynamicGraph1.addDataPoint(690.1353399484593f);
    dynamicGraph1.addDataPoint(881.6207237028647f);
    dynamicGraph1.addDataPoint(1021.5237696044748f);
    dynamicGraph1.addDataPoint(1086.9639528526936f);
    dynamicGraph1.addDataPoint(1072.1460356112946f);
    dynamicGraph1.addDataPoint(989.3712488051617f);
    dynamicGraph1.addDataPoint(865.6797408487928f);
    dynamicGraph1.addDataPoint(735.9601481176646f);
    dynamicGraph1.addDataPoint(634.2240697483867f);
    dynamicGraph1.addDataPoint(585.1890685571077f);
    dynamicGraph1.addDataPoint(598.2345671044008f);
    dynamicGraph1.addDataPoint(665.2101292434531f);
    dynamicGraph1.addDataPoint(762.6285724420429f);
    dynamicGraph1.addDataPoint(857.6990617119434f);
    dynamicGraph1.addDataPoint(916.7118532588985f);
    dynamicGraph1.addDataPoint(913.7075414762633f);
    dynamicGraph1.addDataPoint(837.2917376362882f);
    dynamicGraph1.addDataPoint(693.9084006551393f);
    dynamicGraph1.addDataPoint(506.75109381303275f);
    dynamicGraph1.addDataPoint(310.5592963766812f);
    dynamicGraph1.addDataPoint(143.55480159740057f);
    dynamicGraph1.addDataPoint(38.47489854408883f);
    dynamicGraph1.addDataPoint(14.882107044002339f);
    dynamicGraph1.addDataPoint(74.62035330548647f);
    dynamicGraph1.addDataPoint(201.52029318413898f);
    dynamicGraph1.addDataPoint(365.41965348128184f);
    dynamicGraph1.addDataPoint(529.5118407070095f);
    dynamicGraph1.addDataPoint(659.2250505700933f);
    dynamicGraph1.addDataPoint(730.4632611522317f);
    dynamicGraph1.addDataPoint(735.2002925940421f);
    dynamicGraph1.addDataPoint(683.0695426204691f);
    dynamicGraph1.addDataPoint(598.5751020062855f);
    dynamicGraph1.addDataPoint(514.6242308860367f);
    dynamicGraph1.addDataPoint(463.9833545146678f);
    dynamicGraph1.addDataPoint(470.76880837763105f);
    dynamicGraph1.addDataPoint(544.0751878230085f);
    dynamicGraph1.addDataPoint(675.3198652186336f);
    dynamicGraph1.addDataPoint(839.9709487270786f);
    dynamicGraph1.addDataPoint(1003.2505086951251f);
    dynamicGraph1.addDataPoint(1128.4287777172483f);
    dynamicGraph1.addDataPoint(1185.687448703607f);
    dynamicGraph1.addDataPoint(1159.3871565237173f);
    dynamicGraph1.addDataPoint(1051.961144725232f);
    dynamicGraph1.addDataPoint(883.4792194925151f);
    dynamicGraph1.addDataPoint(686.9824169032106f);
    dynamicGraph1.addDataPoint(500.72067266219096f);
    dynamicGraph1.addDataPoint(359.1809662716682f);
    dynamicGraph1.addDataPoint(285.08688560166206f);
    dynamicGraph1.addDataPoint(284.3107055218277f);
    dynamicGraph1.addDataPoint(344.9247826992327f);
    dynamicGraph1.addDataPoint(440.60493566471575f);
    dynamicGraph1.addDataPoint(537.5333474956769f);
    dynamicGraph1.addDataPoint(603.0926444175169f);
    dynamicGraph1.addDataPoint(614.2060110812636f);
    dynamicGraph1.addDataPoint(563.2673028465572f);
    dynamicGraph1.addDataPoint(460.19804277136166f);
    dynamicGraph1.addDataPoint(330.1199520736161f);
    dynamicGraph1.addDataPoint(207.20878857522143f);
    dynamicGraph1.addDataPoint(126.23412216670201f);
    dynamicGraph1.addDataPoint(113.86007962960466f);
    dynamicGraph1.addDataPoint(181.8444045245582f);
    dynamicGraph1.addDataPoint(323.8117865567974f);
    dynamicGraph1.addDataPoint(516.4053379345291f);
    dynamicGraph1.addDataPoint(724.5506417138565f);
    dynamicGraph1.addDataPoint(909.5616085610075f);
    Graphcontainer.add(dynamicGraph1);

    textbubble2.setXY(454, 25);
    Graphcontainer.add(textbubble2);

    textbubble1.setXY(454, 25);
    Graphcontainer.add(textbubble1);

    AlarmContainer.setPosition(-14, -4, 512, 294);
    AlarmContainer.setVisible(false);

    screenBorder1.setXY(14, 4);
    AlarmContainer.add(screenBorder1);

    AlarmBox.setPosition(172, 199, 322, 78);
    AlarmBox.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    AlarmContainer.add(AlarmBox);

    AlarmTextArea.setPosition(174, 204, 316, 36);
    AlarmTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    AlarmTextArea.setLinespacing(0);
    Unicode::snprintf(AlarmTextAreaBuffer, ALARMTEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9JOL).getText());
    AlarmTextArea.setWildcard(AlarmTextAreaBuffer);
    AlarmTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CL1W));
    AlarmContainer.add(AlarmTextArea);

    CloseAlarmBtn.setBoxWithBorderPosition(0, 0, 96, 28);
    CloseAlarmBtn.setBorderSize(1);
    CloseAlarmBtn.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    CloseAlarmBtn.setText(TypedText(T___SINGLEUSE_Z880));
    CloseAlarmBtn.setTextPosition(-1, 6, 96, 28);
    CloseAlarmBtn.setTextColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(10, 10, 10));
    CloseAlarmBtn.setPosition(181, 241, 96, 28);
    CloseAlarmBtn.setAction(flexButtonCallback);
    AlarmContainer.add(CloseAlarmBtn);

    MuteBtn.setBoxWithBorderPosition(0, 0, 96, 28);
    MuteBtn.setBorderSize(1);
    MuteBtn.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    MuteBtn.setText(TypedText(T___SINGLEUSE_RFH6));
    MuteBtn.setTextPosition(-1, 6, 96, 28);
    MuteBtn.setTextColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(10, 10, 10));
    MuteBtn.setPosition(389, 241, 96, 28);
    MuteBtn.setAction(flexButtonCallback);
    AlarmContainer.add(MuteBtn);

    ShadowBox.setPosition(-2, -4, 482, 287);
    ShadowBox.setVisible(false);
    ShadowBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ShadowBox.setAlpha(171);

    MenuButtonsContainer.setPosition(480, 2, 126, 272);

    slideMenuBackGround.setXY(0, 0);
    MenuButtonsContainer.add(slideMenuBackGround);

    CloseMenuBtn.setIconBitmaps(Bitmap(BITMAP_NEXT_ID), Bitmap(BITMAP_NEXT_ID));
    CloseMenuBtn.setIconXY(2, 7);
    CloseMenuBtn.setPosition(2, 90, 32, 44);
    CloseMenuBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(CloseMenuBtn);

    SettingBtn.setText(TypedText(T___SINGLEUSE_Z3MV));
    SettingBtn.setTextPosition(-1, 0, 95, 44);
    SettingBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    SettingBtn.setIconBitmaps(Bitmap(BITMAP_SETTING_ID), Bitmap(BITMAP_SETTING_ID));
    SettingBtn.setIconXY(36, 18);
    SettingBtn.setPosition(35, 135, 95, 44);
    SettingBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(SettingBtn);

    ConfigBtn.setText(TypedText(T___SINGLEUSE_PAR1));
    ConfigBtn.setTextPosition(0, 0, 95, 44);
    ConfigBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    ConfigBtn.setIconBitmaps(Bitmap(BITMAP_CONFIGURATION_ID), Bitmap(BITMAP_CONFIGURATION_ID));
    ConfigBtn.setIconXY(36, 18);
    ConfigBtn.setPosition(35, 90, 95, 44);
    ConfigBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(ConfigBtn);

    ActiveAlarmsBtn.setText(TypedText(T___SINGLEUSE_O4MZ));
    ActiveAlarmsBtn.setTextPosition(-5, 0, 95, 44);
    ActiveAlarmsBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    ActiveAlarmsBtn.setIconBitmaps(Bitmap(BITMAP_ALARM_ID), Bitmap(BITMAP_ALARM_ID));
    ActiveAlarmsBtn.setIconXY(36, 18);
    ActiveAlarmsBtn.setPosition(34, 225, 95, 44);
    ActiveAlarmsBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(ActiveAlarmsBtn);

    PatientBtn.setText(TypedText(T___SINGLEUSE_TVB0));
    PatientBtn.setTextPosition(-24, 0, 95, 44);
    PatientBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    PatientBtn.setIconBitmaps(Bitmap(BITMAP_EXAMINATION_ID), Bitmap(BITMAP_EXAMINATION_ID));
    PatientBtn.setIconXY(38, 18);
    PatientBtn.setPosition(34, 179, 95, 44);
    PatientBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(PatientBtn);

    LockBtn.setText(TypedText(T___SINGLEUSE_58U5));
    LockBtn.setTextPosition(-34, 0, 95, 44);
    LockBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    LockBtn.setIconBitmaps(Bitmap(BITMAP_PADLOCK_ID), Bitmap(BITMAP_PADLOCK_ID));
    LockBtn.setIconXY(36, 18);
    LockBtn.setPosition(35, 0, 95, 44);
    LockBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(LockBtn);

    HelpBtn.setText(TypedText(T___SINGLEUSE_2YCO));
    HelpBtn.setTextPosition(0, 0, 95, 44);
    HelpBtn.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    HelpBtn.setIconBitmaps(Bitmap(BITMAP_QUESTION_ID), Bitmap(BITMAP_QUESTION_ID));
    HelpBtn.setIconXY(36, 18);
    HelpBtn.setPosition(35, 45, 95, 44);
    HelpBtn.setAction(flexButtonCallback);
    MenuButtonsContainer.add(HelpBtn);

    add(__background);
    add(ChildrenBackground);
    add(DarkBackground);
    add(DefaultBackground);
    add(MainContainer);
    add(Graphcontainer);
    add(AlarmContainer);
    add(ShadowBox);
    add(MenuButtonsContainer);
}

void MainViewBase::setupScreen()
{
    textbubble2.initialize();
    textbubble1.initialize();
    screenBorder1.initialize();
    slideMenuBackGround.initialize();
}

void MainViewBase::InitKeyboard(uint8_t value)
{

}

void MainViewBase::InfusionStartingTransition()
{
    //HideStartButton
    //When InfusionStartingTransition is called move StartButtonCotainer
    //Move StartButtonCotainer to x:-151, y:116 with LinearIn easing in 300 ms (18 Ticks)
    StartButtonCotainer.clearMoveAnimationEndedAction();
    StartButtonCotainer.startMoveAnimation(-151, 116, 18, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    StartButtonCotainer.setMoveAnimationEndedAction(hideStartButtonEndedCallback);
}

void MainViewBase::InfusionStopingTransition()
{
    //HideInfusionBtns
    //When InfusionStopingTransition is called move InfusionContainer
    //Move InfusionContainer to x:-147, y:57 with LinearIn easing in 300 ms (18 Ticks)
    InfusionContainer.clearMoveAnimationEndedAction();
    InfusionContainer.startMoveAnimation(-147, 57, 18, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    InfusionContainer.setMoveAnimationEndedAction(hideInfusionBtnsEndedCallback);
}

void MainViewBase::ChangeMotorMode(uint8_t value)
{
    //ChangeModeToPause
    //When ChangeMotorMode is called call ChangeMotorMode on Main
    //Call ChangeMotorMode
    ChangeMotorMode(5);
}

void MainViewBase::showMenuEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{

}

void MainViewBase::hideMenuEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{
    //ShowOpenMenuBackground
    //When HideMenu completed show OpenMenuBtnBox
    //Show OpenMenuBtnBox
    OpenMenuBtnBox.setVisible(true);
    OpenMenuBtnBox.invalidate();

    //ShowOpenMenuBtn
    //When HideMenu completed show OpenMenuBtn
    //Show OpenMenuBtn
    OpenMenuBtn.setVisible(true);
    OpenMenuBtn.invalidate();

    //HideShadowBox
    //When HideMenu completed hide ShadowBox
    //Hide ShadowBox
    ShadowBox.setVisible(false);
    ShadowBox.invalidate();
}

void MainViewBase::hideStartButtonEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{
    //MoveInfusionBtns
    //When HideStartButton completed move InfusionContainer
    //Move InfusionContainer to x:4, y:56 with LinearIn easing in 100 ms (6 Ticks)
    InfusionContainer.clearMoveAnimationEndedAction();
    InfusionContainer.startMoveAnimation(4, 56, 6, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void MainViewBase::hideInfusionBtnsEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Container>& comp)
{
    //ShowStartBtns
    //When HideInfusionBtns completed move StartButtonCotainer
    //Move StartButtonCotainer to x:2, y:116 with LinearIn easing in 100 ms (6 Ticks)
    StartButtonCotainer.clearMoveAnimationEndedAction();
    StartButtonCotainer.startMoveAnimation(2, 116, 6, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &OpenMenuBtn)
    {
        //HideMenuBtn
        //When OpenMenuBtn clicked hide OpenMenuBtn
        //Hide OpenMenuBtn
        OpenMenuBtn.setVisible(false);
        OpenMenuBtn.invalidate();

        //HideMenuBtnBox
        //When HideMenuBtn completed hide OpenMenuBtnBox
        //Hide OpenMenuBtnBox
        OpenMenuBtnBox.setVisible(false);
        OpenMenuBtnBox.invalidate();

        //ShowMenu
        //When HideMenuBtn completed move MenuButtonsContainer
        //Move MenuButtonsContainer to x:350, y:0 with LinearIn easing in 300 ms (18 Ticks)
        MenuButtonsContainer.clearMoveAnimationEndedAction();
        MenuButtonsContainer.startMoveAnimation(350, 0, 18, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
        MenuButtonsContainer.setMoveAnimationEndedAction(showMenuEndedCallback);

        //ShowShadowBox
        //When HideMenuBtn completed show ShadowBox
        //Show ShadowBox
        ShadowBox.setVisible(true);
        ShadowBox.invalidate();
    }
    else if (&src == &VolumeBtn)
    {
        //KeyboardTotalVolume
        //When VolumeBtn clicked call InitKeyboard on Main
        //Call InitKeyboard
        InitKeyboard(12);
    }
    else if (&src == &TimeBtn)
    {
        //GotoPerfusiontime
        //When TimeBtn clicked call InitKeyboard on Main
        //Call InitKeyboard
        InitKeyboard(14);
    }
    else if (&src == &RateBtn)
    {
        //KeyboardRate
        //When RateBtn clicked call InitKeyboard on Main
        //Call InitKeyboard
        InitKeyboard(13);
    }
    else if (&src == &DrugBtn)
    {
        //GotoDrug
        //When DrugBtn clicked change screen to DrugLibrary
        //Go to DrugLibrary with screen transition towards South
        application().gotoDrugLibraryScreenWipeTransitionSouth();
    }
    else if (&src == &SyringeBtn)
    {
        //detectedSyringe
        //When SyringeBtn clicked change screen to SyringeSelection
        //Go to SyringeSelection with screen transition towards South
        application().gotoSyringeSelectionScreenWipeTransitionSouth();
    }
    else if (&src == &StartBtn)
    {
        //StartPerfusion
        //When StartBtn clicked call ChangeMotorMode on Main
        //Call ChangeMotorMode
        ChangeMotorMode(1);
    }
    else if (&src == &StopBtn)
    {
        //ChangeModeToStop
        //When StopBtn clicked call ChangeMotorMode on Main
        //Call ChangeMotorMode
        ChangeMotorMode(0);
    }
    else if (&src == &BolusBtn)
    {
        //ChangeToBolus
        //When BolusBtn clicked call ChangeMotorMode on Main
        //Call ChangeMotorMode
        ChangeMotorMode(2);
    }
    else if (&src == &OpenGraphBtn)
    {
        //ShowGraph
        //When OpenGraphBtn clicked show Graphcontainer
        //Show Graphcontainer
        Graphcontainer.setVisible(true);
        Graphcontainer.invalidate();
    }
    else if (&src == &CloseGraphBtn)
    {
        //CloseGraph
        //When CloseGraphBtn clicked hide Graphcontainer
        //Hide Graphcontainer
        Graphcontainer.setVisible(false);
        Graphcontainer.invalidate();
    }
    else if (&src == &CloseAlarmBtn)
    {
        //CloseAlarmPopUp
        //When CloseAlarmBtn clicked call virtual function
        //Call CloseAlarmPopUp
        CloseAlarmPopUp();
    }
    else if (&src == &MuteBtn)
    {
        //MuteSound
        //When MuteBtn clicked call virtual function
        //Call MuteSound
        MuteSound();
    }
    else if (&src == &CloseMenuBtn)
    {
        //HideMenu
        //When CloseMenuBtn clicked move MenuButtonsContainer
        //Move MenuButtonsContainer to x:480, y:0 with LinearIn easing in 300 ms (18 Ticks)
        MenuButtonsContainer.clearMoveAnimationEndedAction();
        MenuButtonsContainer.startMoveAnimation(480, 0, 18, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
        MenuButtonsContainer.setMoveAnimationEndedAction(hideMenuEndedCallback);
    }
    else if (&src == &SettingBtn)
    {
        //GotoSetting
        //When SettingBtn clicked change screen to Settings
        //Go to Settings with screen transition towards East
        application().gotoSettingsScreenWipeTransitionEast();
    }
    else if (&src == &ConfigBtn)
    {
        //GotoConfig
        //When ConfigBtn clicked change screen to Configuration
        //Go to Configuration with screen transition towards South
        application().gotoConfigurationScreenWipeTransitionSouth();
    }
    else if (&src == &ActiveAlarmsBtn)
    {
        //GotoAlarms
        //When ActiveAlarmsBtn clicked change screen to ActiveAlarms
        //Go to ActiveAlarms with screen transition towards East
        application().gotoActiveAlarmsScreenWipeTransitionEast();
    }
    else if (&src == &PatientBtn)
    {
        //GotoHome
        //When PatientBtn clicked change screen to Home
        //Go to Home with screen transition towards West
        application().gotoHomeScreenWipeTransitionWest();
    }
    else if (&src == &LockBtn)
    {
        //LockScreen
        //When LockBtn clicked call virtual function
        //Call LockScreen
        LockScreen();
    }
    else if (&src == &HelpBtn)
    {
        //GotoHelp
        //When HelpBtn clicked change screen to Manual
        //Go to Manual with screen transition towards South
        application().gotoManualScreenWipeTransitionSouth();
    }
}

void MainViewBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
    if (&src == &dynamicGraph1)
    {
        //reactToClick
        //When dynamicGraph1 clicked call virtual function
        //Call reactToClick
        reactToClick(value);
    }
}
