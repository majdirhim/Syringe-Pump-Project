/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_withstart_screen/mainScreen_WithSTARTViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

mainScreen_WithSTARTViewBase::mainScreen_WithSTARTViewBase() :
    checkparametersCounter(0),
    flexButtonCallback(this, &mainScreen_WithSTARTViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    BackendBlack.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND3_ID));
    BackendBlack.setPosition(0, 0, 480, 272);
    BackendBlack.setVisible(false);
    BackendBlack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    BackendChildren.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND4_ID));
    BackendChildren.setPosition(0, 0, 481, 272);
    BackendChildren.setVisible(false);
    BackendChildren.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    backend.setXY(0, 0);
    backend.setBitmap(touchgfx::Bitmap(BITMAP_MINI_BACKEND2_ID));

    container_config.setPosition(0, 0, 481, 272);
    container_config.setVisible(false);

    backend2.setPosition(19, 58, 336, 72);
    backend2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backend2.setAlpha(33);
    container_config.add(backend2);

    box_config.setPosition(376, 172, 95, 46);
    box_config.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_config.setAlpha(90);
    container_config.add(box_config);

    box1_start.setPosition(376, 220, 95, 44);
    box1_start.setColor(touchgfx::Color::getColorFromRGB(89, 207, 102));
    box1_start.setAlpha(90);
    container_config.add(box1_start);

    backend1.setPosition(19, 133, 336, 40);
    backend1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backend1.setAlpha(90);
    container_config.add(backend1);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    scalableImage1.setPosition(131, 134, 2, 38);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_config.add(scalableImage1);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    scalableImage2.setPosition(243, 134, 2, 38);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_config.add(scalableImage2);

    box_back.setPosition(376, 8, 95, 32);
    box_back.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_back.setAlpha(90);
    container_config.add(box_back);

    box1_1_4_2.setPosition(19, 178, 336, 40);
    box1_1_4_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1_1_4_2.setAlpha(90);
    container_config.add(box1_1_4_2);

    scalableImage1_3.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    scalableImage1_3.setPosition(131, 179, 2, 38);
    scalableImage1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_config.add(scalableImage1_3);

    scalableIm.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    scalableIm.setPosition(243, 179, 2, 38);
    scalableIm.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_config.add(scalableIm);

    box1_1_4_2_1.setPosition(19, 222, 335, 40);
    box1_1_4_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1_1_4_2_1.setAlpha(90);
    container_config.add(box1_1_4_2_1);

    textAreamlh.setPosition(191, 58, 112, 63);
    textAreamlh.setColor(touchgfx::Color::getColorFromRGB(227, 227, 227));
    textAreamlh.setLinespacing(0);
    textAreamlh.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BIPR));
    container_config.add(textAreamlh);

    textArea_rate.setXY(300, 87);
    textArea_rate.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    textArea_rate.setLinespacing(0);
    textArea_rate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M6YD));
    container_config.add(textArea_rate);

    textareavolume.setXY(165, 134);
    textareavolume.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareavolume.setLinespacing(0);
    textareavolume.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LOYX));
    container_config.add(textareavolume);

    textareaTime.setXY(284, 134);
    textareaTime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareaTime.setLinespacing(0);
    textareaTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y06H));
    container_config.add(textareaTime);

    textareaDrug.setXY(59, 133);
    textareaDrug.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareaDrug.setLinespacing(0);
    textareaDrug.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UU5Q));
    container_config.add(textareaDrug);

    textareavolumelimite.setXY(61, 178);
    textareavolumelimite.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareavolumelimite.setLinespacing(0);
    textareavolumelimite.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YB53));
    container_config.add(textareavolumelimite);

    textareaocclusion.setXY(144, 247);
    textareaocclusion.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareaocclusion.setLinespacing(0);
    textareaocclusion.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O2PL));
    container_config.add(textareaocclusion);

    textareaKVOrate.setXY(154, 179);
    textareaKVOrate.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareaKVOrate.setLinespacing(0);
    textareaKVOrate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UFEA));
    container_config.add(textareaKVOrate);

    textareabolus.setXY(279, 180);
    textareabolus.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textareabolus.setLinespacing(0);
    textareabolus.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YG6I));
    container_config.add(textareabolus);

    Configuration_1.setIconBitmaps(Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS1_ID), Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS1_ID));
    Configuration_1.setIconXY(32, 7);
    Configuration_1.setText(TypedText(T___SINGLEUSE_OSVC));
    Configuration_1.setTextPosition(1, 26, 95, 45);
    Configuration_1.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Configuration_1.setPosition(376, 174, 95, 45);
    container_config.add(Configuration_1);

    Backtoconfig1.setIconBitmaps(Bitmap(BITMAP_GROUPE49_ID), Bitmap(BITMAP_GROUPE49_ID));
    Backtoconfig1.setIconXY(16, 9);
    Backtoconfig1.setText(TypedText(T___SINGLEUSE_22CP));
    Backtoconfig1.setTextPosition(23, 6, 95, 32);
    Backtoconfig1.setTextColors(touchgfx::Color::getColorFromRGB(245, 245, 245), touchgfx::Color::getColorFromRGB(242, 242, 242));
    Backtoconfig1.setPosition(376, 8, 95, 32);
    Backtoconfig1.setAction(flexButtonCallback);
    container_config.add(Backtoconfig1);

    flexButton2.setText(TypedText(T___SINGLEUSE_6PG9));
    flexButton2.setTextPosition(0, 8, 95, 44);
    flexButton2.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButton2.setPosition(376, 222, 95, 44);
    container_config.add(flexButton2);

    flexBtn_Drug.setWildcardText(TypedText(T___SINGLEUSE_MWCT));
    Unicode::snprintf(flexBtn_DrugBuffer, FLEXBTN_DRUG_SIZE, "%s", TypedText(T___SINGLEUSE_RNTG).getText());
    flexBtn_Drug.setWildcardTextBuffer(flexBtn_DrugBuffer);
    flexBtn_Drug.setWildcardTextPosition(0, 0, 112, 39);
    flexBtn_Drug.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_Drug.setPosition(20, 134, 112, 39);
    flexBtn_Drug.setAlpha(224);
    flexBtn_Drug.setAction(flexButtonCallback);
    container_config.add(flexBtn_Drug);

    flexBtn_time.setTwoWildcardText(TypedText(T___SINGLEUSE_KY9R));
    Unicode::snprintf(flexBtn_timeBuffer1, FLEXBTN_TIMEBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_4YYY).getText());
    flexBtn_time.setWildcardTextBuffer1(flexBtn_timeBuffer1);
    Unicode::snprintf(flexBtn_timeBuffer2, FLEXBTN_TIMEBUFFER2_SIZE, "%s", TypedText(T___SINGLEUSE_E1TU).getText());
    flexBtn_time.setWildcardTextBuffer2(flexBtn_timeBuffer2);
    flexBtn_time.setTwoWildcardTextPosition(0, 0, 110, 39);
    flexBtn_time.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_time.setPosition(245, 134, 110, 39);
    flexBtn_time.setAlpha(224);
    flexBtn_time.setAction(flexButtonCallback);
    container_config.add(flexBtn_time);

    flexBtn_volume.setWildcardText(TypedText(T___SINGLEUSE_RPO6));
    Unicode::snprintf(flexBtn_volumeBuffer, FLEXBTN_VOLUME_SIZE, "%s", TypedText(T___SINGLEUSE_GNS2).getText());
    flexBtn_volume.setWildcardTextBuffer(flexBtn_volumeBuffer);
    flexBtn_volume.setWildcardTextPosition(0, 0, 109, 39);
    flexBtn_volume.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_volume.setPosition(134, 134, 109, 39);
    flexBtn_volume.setAlpha(224);
    flexBtn_volume.setAction(flexButtonCallback);
    container_config.add(flexBtn_volume);

    flexBtn_VTBI.setWildcardText(TypedText(T___SINGLEUSE_J6OX));
    Unicode::snprintf(flexBtn_VTBIBuffer, FLEXBTN_VTBI_SIZE, "%s", TypedText(T___SINGLEUSE_TAYE).getText());
    flexBtn_VTBI.setWildcardTextBuffer(flexBtn_VTBIBuffer);
    flexBtn_VTBI.setWildcardTextPosition(0, 16, 112, 38);
    flexBtn_VTBI.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_VTBI.setPosition(19, 179, 112, 38);
    flexBtn_VTBI.setAction(flexButtonCallback);
    container_config.add(flexBtn_VTBI);

    flexBtn_KVOrate.setWildcardText(TypedText(T___SINGLEUSE_DYDI));
    Unicode::snprintf(flexBtn_KVOrateBuffer, FLEXBTN_KVORATE_SIZE, "%s", TypedText(T___SINGLEUSE_A655).getText());
    flexBtn_KVOrate.setWildcardTextBuffer(flexBtn_KVOrateBuffer);
    flexBtn_KVOrate.setWildcardTextPosition(0, 0, 109, 39);
    flexBtn_KVOrate.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_KVOrate.setPosition(132, 176, 109, 39);
    flexBtn_KVOrate.setAlpha(224);
    flexBtn_KVOrate.setAction(flexButtonCallback);
    container_config.add(flexBtn_KVOrate);

    flexBtn_bolus.setWildcardText(TypedText(T___SINGLEUSE_36XT));
    Unicode::snprintf(flexBtn_bolusBuffer, FLEXBTN_BOLUS_SIZE, "%s", TypedText(T___SINGLEUSE_UNF0).getText());
    flexBtn_bolus.setWildcardTextBuffer(flexBtn_bolusBuffer);
    flexBtn_bolus.setWildcardTextPosition(0, 0, 110, 39);
    flexBtn_bolus.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_bolus.setPosition(245, 179, 110, 39);
    flexBtn_bolus.setAlpha(224);
    flexBtn_bolus.setAction(flexButtonCallback);
    container_config.add(flexBtn_bolus);

    flexBtn_occlusionlevel.setTwoWildcardText(TypedText(T___SINGLEUSE_SEHE));
    Unicode::snprintf(flexBtn_occlusionlevelBuffer1, FLEXBTN_OCCLUSIONLEVELBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_DOKF).getText());
    flexBtn_occlusionlevel.setWildcardTextBuffer1(flexBtn_occlusionlevelBuffer1);
    Unicode::snprintf(flexBtn_occlusionlevelBuffer2, FLEXBTN_OCCLUSIONLEVELBUFFER2_SIZE, "%s", TypedText(T___SINGLEUSE_6VS7).getText());
    flexBtn_occlusionlevel.setWildcardTextBuffer2(flexBtn_occlusionlevelBuffer2);
    flexBtn_occlusionlevel.setTwoWildcardTextPosition(0, 0, 337, 42);
    flexBtn_occlusionlevel.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexBtn_occlusionlevel.setPosition(20, 221, 337, 42);
    flexBtn_occlusionlevel.setAlpha(224);
    flexBtn_occlusionlevel.setAction(flexButtonCallback);
    container_config.add(flexBtn_occlusionlevel);

    flexbtn_Rate.setWildcardText(TypedText(T___SINGLEUSE_HGND));
    Unicode::snprintf(flexbtn_RateBuffer, FLEXBTN_RATE_SIZE, "%s", TypedText(T___SINGLEUSE_41DV).getText());
    flexbtn_Rate.setWildcardTextBuffer(flexbtn_RateBuffer);
    flexbtn_Rate.setWildcardTextPosition(30, 7, 336, 72);
    flexbtn_Rate.setWildcardTextColors(touchgfx::Color::getColorFromRGB(242, 242, 242), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexbtn_Rate.setPosition(19, 58, 336, 72);
    flexbtn_Rate.setAlpha(224);
    flexbtn_Rate.setAction(flexButtonCallback);
    container_config.add(flexbtn_Rate);

    pressuretext.setXY(272, 222);
    pressuretext.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pressuretext.setLinespacing(0);
    Unicode::snprintf(pressuretextBuffer, PRESSURETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6EUQ).getText());
    pressuretext.setWildcard(pressuretextBuffer);
    pressuretext.resizeToCurrentText();
    pressuretext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S6QE));
    container_config.add(pressuretext);

    container_main.setPosition(0, 0, 482, 272);

    textArea1_1.setPosition(197, 103, 103, 52);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(227, 227, 227));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLRA));
    container_main.add(textArea1_1);

    textArea2.setXY(301, 128);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9ZSW));
    container_main.add(textArea2);

    textArea3.setPosition(2, 248, 180, 22);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(247, 243, 243));
    textArea3.setLinespacing(0);
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XJLK).getText());
    textArea3.setWildcard(textArea3Buffer);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3PPU));
    container_main.add(textArea3);

    textArea3_1.setPosition(189, 251, 72, 43);
    textArea3_1.setColor(touchgfx::Color::getColorFromRGB(247, 243, 243));
    textArea3_1.setLinespacing(0);
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DJ27));
    container_main.add(textArea3_1);

    textArea3_1_1.setPosition(263, 251, 85, 22);
    textArea3_1_1.setColor(touchgfx::Color::getColorFromRGB(247, 243, 243));
    textArea3_1_1.setLinespacing(0);
    touchgfx::Unicode::snprintf(textArea3_1_1Buffer1, TEXTAREA3_1_1BUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0BYN).getText());
    textArea3_1_1.setWildcard1(textArea3_1_1Buffer1);
    textArea3_1_1Buffer1[0] = 0;
    textArea3_1_1.setWildcard2(textArea3_1_1Buffer2);
    textArea3_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FR8B));
    container_main.add(textArea3_1_1);

    box1_1_4.setPosition(142, 179, 223, 39);
    box1_1_4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1_1_4.setAlpha(90);
    container_main.add(box1_1_4);

    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_TRA107_ID));
    scalableImage1_2.setPosition(252, 179, 2, 38);
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_main.add(scalableImage1_2);

    Drug.setXY(186, 35);
    Drug.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Drug.setLinespacing(0);
    Drug.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RSR2));
    container_main.add(Drug);

    volume.setXY(175, 179);
    volume.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    volume.setLinespacing(0);
    volume.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8QKQ));
    container_main.add(volume);

    time.setXY(297, 179);
    time.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    time.setLinespacing(0);
    time.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HGI5));
    container_main.add(time);

    box_configuration.setPosition(376, 51, 95, 44);
    box_configuration.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_configuration.setAlpha(90);
    container_main.add(box_configuration);

    Configuration.setIconBitmaps(Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS1_ID), Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS1_ID));
    Configuration.setIconXY(32, 8);
    Configuration.setText(TypedText(T___SINGLEUSE_9T2E));
    Configuration.setTextPosition(1, 27, 95, 43);
    Configuration.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Configuration.setPosition(376, 52, 95, 43);
    Configuration.setAction(flexButtonCallback);
    container_main.add(Configuration);

    box_alarm.setPosition(376, 140, 95, 44);
    box_alarm.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_alarm.setAlpha(90);
    container_main.add(box_alarm);

    Alarm.setIconBitmaps(Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_ID), Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS_ID));
    Alarm.setIconXY(38, 1);
    Alarm.setText(TypedText(T___SINGLEUSE_2UB8));
    Alarm.setTextPosition(1, 26, 95, 44);
    Alarm.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Alarm.setPosition(376, 140, 95, 44);
    Alarm.setAction(flexButtonCallback);
    container_main.add(Alarm);

    box_patient.setPosition(376, 96, 95, 43);
    box_patient.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_patient.setAlpha(90);
    container_main.add(box_patient);

    patient.setText(TypedText(T___SINGLEUSE_Q8O2));
    patient.setTextPosition(2, 16, 95, 40);
    patient.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    patient.setPosition(376, 96, 95, 40);
    patient.setAction(flexButtonCallback);
    container_main.add(patient);

    boxstop.setPosition(376, 229, 95, 44);
    boxstop.setColor(touchgfx::Color::getColorFromRGB(253, 0, 0));
    boxstop.setAlpha(90);
    container_main.add(boxstop);

    box_start.setPosition(376, 230, 95, 40);
    box_start.setColor(touchgfx::Color::getColorFromRGB(89, 207, 102));
    box_start.setAlpha(90);
    container_main.add(box_start);

    btn_Stop.setText(TypedText(T___SINGLEUSE_TBC6));
    btn_Stop.setTextPosition(0, 8, 95, 40);
    btn_Stop.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_Stop.setPosition(376, 230, 95, 40);
    btn_Stop.setAction(flexButtonCallback);
    container_main.add(btn_Stop);

    btn_NO_syringe_detected.setText(TypedText(T___SINGLEUSE_BUH6));
    btn_NO_syringe_detected.setTextPosition(0, -2, 95, 40);
    btn_NO_syringe_detected.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_NO_syringe_detected.setPosition(376, 230, 95, 40);
    btn_NO_syringe_detected.setVisible(false);
    container_main.add(btn_NO_syringe_detected);

    btn_Start.setText(TypedText(T___SINGLEUSE_5DGJ));
    btn_Start.setTextPosition(0, 8, 95, 40);
    btn_Start.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_Start.setPosition(376, 230, 95, 40);
    btn_Start.setAction(flexButtonCallback);
    container_main.add(btn_Start);

    box_setting.setPosition(376, 6, 95, 44);
    box_setting.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_setting.setAlpha(90);
    container_main.add(box_setting);

    Settings.setIconBitmaps(Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS555_ID), Bitmap(BITMAP_OUTPUT_ONLINEPNGTOOLS555_ID));
    Settings.setIconXY(35, 2);
    Settings.setText(TypedText(T___SINGLEUSE_2Y9W));
    Settings.setTextPosition(1, 26, 95, 44);
    Settings.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Settings.setPosition(376, 6, 95, 44);
    Settings.setAction(flexButtonCallback);
    container_main.add(Settings);

    textAreadrug.setPosition(100, 48, 204, 47);
    textAreadrug.setColor(touchgfx::Color::getColorFromRGB(228, 0, 0));
    textAreadrug.setLinespacing(0);
    Unicode::snprintf(textAreadrugBuffer, TEXTAREADRUG_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9RBE).getText());
    textAreadrug.setWildcard(textAreadrugBuffer);
    textAreadrug.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9OUO));
    container_main.add(textAreadrug);

    textArea_volume.setPosition(151, 198, 80, 15);
    textArea_volume.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_volume.setLinespacing(0);
    Unicode::snprintf(textArea_volumeBuffer, TEXTAREA_VOLUME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_199M).getText());
    textArea_volume.setWildcard(textArea_volumeBuffer);
    textArea_volume.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VNZ6));
    container_main.add(textArea_volume);

    textArea4_2.setPosition(274, 196, 80, 17);
    textArea4_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea4_2.setLinespacing(0);
    touchgfx::Unicode::snprintf(textArea4_2Buffer1, TEXTAREA4_2BUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XDTR).getText());
    textArea4_2.setWildcard1(textArea4_2Buffer1);
    touchgfx::Unicode::snprintf(textArea4_2Buffer2, TEXTAREA4_2BUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IZYN).getText());
    textArea4_2.setWildcard2(textArea4_2Buffer2);
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_COFY));
    container_main.add(textArea4_2);

    textArearate.setPosition(2, 99, 195, 60);
    textArearate.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArearate.setLinespacing(0);
    Unicode::snprintf(textArearateBuffer, TEXTAREARATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A681).getText());
    textArearate.setWildcard(textArearateBuffer);
    textArearate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F8N7));
    container_main.add(textArearate);

    flexButtonRate.setBoxWithBorderPosition(0, 0, 150, 82);
    flexButtonRate.setBorderSize(5);
    flexButtonRate.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonRate.setPosition(24, 85, 150, 82);
    flexButtonRate.setAlpha(0);
    flexButtonRate.setAction(flexButtonCallback);
    container_main.add(flexButtonRate);

    boxmode.setPosition(376, 185, 95, 44);
    boxmode.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxmode.setAlpha(90);
    container_main.add(boxmode);

    Mode.setIconBitmaps(Bitmap(BITMAP_MINI_ICONS8_REWIND8_ID), Bitmap(BITMAP_MINI_ICONS8_REWIND8_ID));
    Mode.setIconXY(35, -2);
    Mode.setText(TypedText(T___SINGLEUSE_A254));
    Mode.setTextPosition(4, 28, 95, 44);
    Mode.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Mode.setPosition(376, 185, 95, 44);
    Mode.setAction(flexButtonCallback);
    container_main.add(Mode);

    btn_slect_drug.setBoxWithBorderPosition(0, 0, 136, 48);
    btn_slect_drug.setBorderSize(5);
    btn_slect_drug.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_slect_drug.setPosition(134, 35, 136, 48);
    btn_slect_drug.setAlpha(0);
    btn_slect_drug.setAction(flexButtonCallback);
    container_main.add(btn_slect_drug);

    flexButton3_1.setBoxWithBorderPosition(0, 0, 52, 26);
    flexButton3_1.setBorderSize(0);
    flexButton3_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(19, 123, 175), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton3_1.setPosition(82, 7, 52, 26);
    flexButton3_1.setAlpha(0);
    flexButton3_1.setAction(flexButtonCallback);
    container_main.add(flexButton3_1);

    textArea4.setPosition(82, 8, 52, 28);
    textArea4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6UCI));
    container_main.add(textArea4);

    flexButtonvolumemain.setBoxWithBorderPosition(0, 0, 92, 38);
    flexButtonvolumemain.setBorderSize(5);
    flexButtonvolumemain.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonvolumemain.setPosition(142, 179, 92, 38);
    flexButtonvolumemain.setAlpha(0);
    flexButtonvolumemain.setAction(flexButtonCallback);
    container_main.add(flexButtonvolumemain);

    flexButtontimemain.setBoxWithBorderPosition(0, 0, 92, 38);
    flexButtontimemain.setBorderSize(5);
    flexButtontimemain.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtontimemain.setPosition(272, 180, 92, 38);
    flexButtontimemain.setAlpha(0);
    flexButtontimemain.setAction(flexButtonCallback);
    container_main.add(flexButtontimemain);

    gauge.setBackground(touchgfx::Bitmap(BITMAP_GAUGE02_BACKGROUND_ID));
    gauge.setPosition(15, 161, 85, 87);
    gauge.setCenter(43, 45);
    gauge.setStartEndAngle(-130, 130);
    gauge.setRange(0, 100);
    gauge.setValue(0);
    gauge.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
    gauge.setNeedle(BITMAP_GAUGE02_NEEDLE_ID, 5, 22);
    gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    container_main.add(gauge);

    iconGreen.setBitmap(touchgfx::Bitmap(BITMAP_GAUGE02_ICON_LEVEL00_ID));
    iconGreen.setPosition(46, 221, 22, 15);
    iconGreen.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_main.add(iconGreen);

    iconYellow.setBitmap(touchgfx::Bitmap(BITMAP_GAUGE02_ICON_LEVEL02_ID));
    iconYellow.setPosition(46, 221, 22, 15);
    iconYellow.setVisible(false);
    iconYellow.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_main.add(iconYellow);

    iconRed.setBitmap(touchgfx::Bitmap(BITMAP_GAUGE02_ICON_LEVEL04_ID));
    iconRed.setPosition(46, 221, 22, 15);
    iconRed.setVisible(false);
    iconRed.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container_main.add(iconRed);

    Syringe.setWildcardText(TypedText(T___SINGLEUSE_2JOT));
    Syringe.setWildcardTextPosition(0, 0, 69, 24);
    Syringe.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    Syringe.setPosition(7, 60, 69, 24);
    Syringe.setAction(flexButtonCallback);
    container_main.add(Syringe);

    Syringeimage.setXY(2, 62);
    Syringeimage.setBitmap(touchgfx::Bitmap(BITMAP_GROUPE11_ID));
    container_main.add(Syringeimage);

    boxProgress1.setXY(2, 5);
    boxProgress1.setProgressIndicatorPosition(5, 2, 46, 14);
    boxProgress1.setRange(0, 100, 100, 1);
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::LEFT);
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_BATTERY_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 255, 51));
    boxProgress1.setValue(100);

    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_GROUPE1572_ID));
    scalableImage1_1.setPosition(54, 7, 15, 15);
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    patientname.setXY(146, 7);
    patientname.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    patientname.setLinespacing(0);
    Unicode::snprintf(patientnameBuffer, PATIENTNAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UA83).getText());
    patientname.setWildcard(patientnameBuffer);
    patientname.resizeToCurrentText();
    patientname.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DRE5));

    textclocksec.setPosition(334, 4, 40, 29);
    textclocksec.setColor(touchgfx::Color::getColorFromRGB(243, 243, 243));
    textclocksec.setLinespacing(0);
    Unicode::snprintf(textclocksecBuffer, TEXTCLOCKSEC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PWKJ).getText());
    textclocksec.setWildcard(textclocksecBuffer);
    textclocksec.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PAMI));

    textclock.setPosition(270, 5, 71, 29);
    textclock.setColor(touchgfx::Color::getColorFromRGB(243, 243, 243));
    textclock.setLinespacing(0);
    touchgfx::Unicode::snprintf(textclockBuffer1, TEXTCLOCKBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_T8LB).getText());
    textclock.setWildcard1(textclockBuffer1);
    touchgfx::Unicode::snprintf(textclockBuffer2, TEXTCLOCKBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RY39).getText());
    textclock.setWildcard2(textclockBuffer2);
    textclock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z2SC));

    PurgepopUp.setBackground(touchgfx::BitmapId(BITMAP_GROUPE12_ID), -400, -219);
    PurgepopUp.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    PurgepopUp.setShadeAlpha(103);
    PurgepopUp.hide();

    DoneButton.setBoxWithBorderPosition(0, 0, 151, 55);
    DoneButton.setBorderSize(1);
    DoneButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(102, 102, 102), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(86, 86, 86));
    DoneButton.setText(TypedText(T___SINGLEUSE_NCT4));
    DoneButton.setTextPosition(0, 15, 151, 55);
    DoneButton.setTextColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(131, 131, 131));
    DoneButton.setPosition(300, 111, 151, 55);
    DoneButton.setAction(flexButtonCallback);
    PurgepopUp.add(DoneButton);

    textArea5.setXY(168, 11);
    textArea5.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea5.setLinespacing(0);
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FHZT));
    PurgepopUp.add(textArea5);

    PurgeButton.setBoxWithBorderPosition(0, 0, 149, 55);
    PurgeButton.setBorderSize(1);
    PurgeButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(102, 102, 102), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(86, 86, 86));
    PurgeButton.setText(TypedText(T___SINGLEUSE_KF30));
    PurgeButton.setTextPosition(0, 14, 149, 55);
    PurgeButton.setTextColors(touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(131, 131, 131));
    PurgeButton.setPosition(21, 111, 149, 55);
    PurgeButton.setAction(flexButtonCallback);
    PurgepopUp.add(PurgeButton);

    eventPopup.setBackground(touchgfx::BitmapId(BITMAP_OUTPUT_ONLINEPNGTOOLS_ID), 231, 124);
    eventPopup.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    eventPopup.setShadeAlpha(134);
    eventPopup.hide();

    boxWithBorder1_1.setPosition(4, 5, 465, 259);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1.setBorderSize(5);
    eventPopup.add(boxWithBorder1_1);

    scrollablealarmcontainer_1.setPosition(30, 96, 411, 61);
    scrollablealarmcontainer_1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    Event.setPosition(3, 0, 408, 199);
    Event.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Event.setLinespacing(0);
    Unicode::snprintf(EventBuffer, EVENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3JQY).getText());
    Event.setWildcard(EventBuffer);
    Event.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3GEX));
    scrollablealarmcontainer_1.add(Event);
    eventPopup.add(scrollablealarmcontainer_1);

    CLoseeventpopUp.setText(TypedText(T___SINGLEUSE_VYOI));
    CLoseeventpopUp.setTextPosition(0, 0, 108, 32);
    CLoseeventpopUp.setTextColors(touchgfx::Color::getColorFromRGB(44, 151, 247), touchgfx::Color::getColorFromRGB(10, 10, 10));
    CLoseeventpopUp.setPosition(181, 232, 108, 32);
    CLoseeventpopUp.setAction(flexButtonCallback);
    eventPopup.add(CLoseeventpopUp);

    MuteBtnevent.setText(TypedText(T___SINGLEUSE_VM50));
    MuteBtnevent.setTextPosition(0, 0, 108, 32);
    MuteBtnevent.setTextColors(touchgfx::Color::getColorFromRGB(44, 151, 247), touchgfx::Color::getColorFromRGB(10, 10, 10));
    MuteBtnevent.setPosition(349, 229, 108, 32);
    MuteBtnevent.setVisible(false);
    eventPopup.add(MuteBtnevent);

    alarmPopup.setBackground(touchgfx::BitmapId(BITMAP_RECTANGLE46_ID), -400, -132);
    alarmPopup.setShadeColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    alarmPopup.setShadeAlpha(189);
    alarmPopup.hide();

    boxWithBorder1.setPosition(4, 5, 465, 259);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    boxWithBorder1.setBorderSize(5);
    alarmPopup.add(boxWithBorder1);

    box1_1_5.setPosition(30, 26, 411, 60);
    box1_1_5.setColor(touchgfx::Color::getColorFromRGB(231, 229, 229));
    alarmPopup.add(box1_1_5);

    scrollablealarmcontainer.setPosition(30, 25, 411, 61);
    scrollablealarmcontainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    alarm.setPosition(0, -2, 411, 63);
    alarm.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    alarm.setLinespacing(0);
    Unicode::snprintf(alarmBuffer, ALARM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_COFM).getText());
    alarm.setWildcard(alarmBuffer);
    alarm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TUP5));
    scrollablealarmcontainer.add(alarm);
    alarmPopup.add(scrollablealarmcontainer);

    scrollablealarmDcontainer.setPosition(19, 94, 438, 62);
    scrollablealarmDcontainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1_1.setPosition(0, 2, 438, 60);
    box1_1.setColor(touchgfx::Color::getColorFromRGB(231, 229, 229));
    scrollablealarmDcontainer.add(box1_1);

    Description.setPosition(0, 5, 453, 57);
    Description.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Description.setLinespacing(0);
    DescriptionBuffer[0] = 0;
    Description.setWildcard(DescriptionBuffer);
    Description.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V0R8));
    scrollablealarmDcontainer.add(Description);
    alarmPopup.add(scrollablealarmDcontainer);

    box1.setPosition(19, 163, 438, 67);
    box1.setColor(touchgfx::Color::getColorFromRGB(231, 229, 229));
    alarmPopup.add(box1);

    scrollablealarmAcontainer.setPosition(19, 163, 438, 68);
    scrollablealarmAcontainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    Action.setPosition(0, -1, 566, 207);
    Action.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Action.setLinespacing(0);
    ActionBuffer[0] = 0;
    Action.setWildcard(ActionBuffer);
    Action.setTypedText(touchgfx::TypedText(T___SINGLEUSE_234I));
    scrollablealarmAcontainer.add(Action);
    alarmPopup.add(scrollablealarmAcontainer);

    CLosepopUp.setText(TypedText(T___SINGLEUSE_VOWT));
    CLosepopUp.setTextPosition(0, 0, 108, 32);
    CLosepopUp.setTextColors(touchgfx::Color::getColorFromRGB(44, 151, 247), touchgfx::Color::getColorFromRGB(10, 10, 10));
    CLosepopUp.setPosition(181, 236, 108, 32);
    CLosepopUp.setAction(flexButtonCallback);
    alarmPopup.add(CLosepopUp);

    MuteBtn.setText(TypedText(T___SINGLEUSE_LKXH));
    MuteBtn.setTextPosition(0, 0, 108, 32);
    MuteBtn.setTextColors(touchgfx::Color::getColorFromRGB(44, 151, 247), touchgfx::Color::getColorFromRGB(10, 10, 10));
    MuteBtn.setPosition(349, 236, 108, 32);
    MuteBtn.setAction(flexButtonCallback);
    alarmPopup.add(MuteBtn);

    UnlockButton.setBackground(touchgfx::BitmapId(BITMAP_TRANSPARENT_ID), 118, 99);
    UnlockButton.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    UnlockButton.setShadeAlpha(178);
    UnlockButton.hide();

    box_alarm_1.setPosition(10, 4, 199, 51);
    box_alarm_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box_alarm_1.setAlpha(145);
    UnlockButton.add(box_alarm_1);

    Unlock.setText(TypedText(T___SINGLEUSE_WXU3));
    Unlock.setTextPosition(1, 13, 199, 51);
    Unlock.setTextColors(touchgfx::Color::getColorFromRGB(247, 247, 247), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Unlock.setPosition(10, 4, 199, 51);
    Unlock.setAction(flexButtonCallback);
    UnlockButton.add(Unlock);

    add(__background);
    add(BackendBlack);
    add(BackendChildren);
    add(backend);
    add(container_config);
    add(container_main);
    add(boxProgress1);
    add(scalableImage1_1);
    add(patientname);
    add(textclocksec);
    add(textclock);
    add(PurgepopUp);
    add(eventPopup);
    add(alarmPopup);
    add(UnlockButton);
}

void mainScreen_WithSTARTViewBase::setupScreen()
{

}

//Handles delays
void mainScreen_WithSTARTViewBase::handleTickEvent()
{
    if(checkparametersCounter > 0)
    {
        checkparametersCounter--;
        if(checkparametersCounter == 0)
        {

        }
    }
}

void mainScreen_WithSTARTViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Backtoconfig1)
    {
        //IT_backtomain1
        //When Backtoconfig1 clicked call virtual function
        //Call backtomain1
        backtomain1();
    }
    else if (&src == &flexBtn_Drug)
    {
        //IT_config_Drug
        //When flexBtn_Drug clicked change screen to Screenselectdrug
        //Go to Screenselectdrug with no screen transition
        application().gotoScreenselectdrugScreenNoTransition();
    }
    else if (&src == &flexBtn_time)
    {
        //timeparameters1
        //When flexBtn_time clicked change screen to timeparam
        //Go to timeparam with no screen transition
        application().gototimeparamScreenNoTransition();
    }
    else if (&src == &flexBtn_volume)
    {
        //setvarvolume
        //When flexBtn_volume clicked call virtual function
        //Call ratevarvolume
        ratevarvolume();

        //gotokeyboardaftervolume
        //When setvarvolume completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &flexBtn_VTBI)
    {
        //vtbi
        //When flexBtn_VTBI clicked call virtual function
        //Call setVTBI
        setVTBI();

        //gotokeybordVTBI
        //When vtbi completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &flexBtn_KVOrate)
    {
        //kvorateset
        //When flexBtn_KVOrate clicked call virtual function
        //Call KVOSet
        KVOSet();

        //kvotransition
        //When kvorateset completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &flexBtn_bolus)
    {
        //bolussetvar
        //When flexBtn_bolus clicked call virtual function
        //Call bolusSet
        bolusSet();

        //keyboardafterbolus
        //When bolussetvar completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &flexBtn_occlusionlevel)
    {
        //OclusionLevelTransition
        //When flexBtn_occlusionlevel clicked change screen to Oclusion_level
        //Go to Oclusion_level with no screen transition
        application().gotoOclusion_levelScreenNoTransition();
    }
    else if (&src == &flexbtn_Rate)
    {
        //setvartorate2
        //When flexbtn_Rate clicked call virtual function
        //Call ratevar
        ratevar();

        //gotokeyboardafterrate2
        //When setvartorate2 completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &Configuration)
    {
        //IT_gotoconfigue
        //When Configuration clicked call virtual function
        //Call gotoconfigue
        gotoconfigue();
    }
    else if (&src == &Alarm)
    {
        //alarmlist
        //When Alarm clicked change screen to AlarmList
        //Go to AlarmList with no screen transition
        application().gotoAlarmListScreenNoTransition();
    }
    else if (&src == &patient)
    {
        //gotopatientdata
        //When patient clicked change screen to startup
        //Go to startup with no screen transition
        application().gotostartupScreenNoTransition();
    }
    else if (&src == &btn_Stop)
    {
        //STOP
        //When btn_Stop clicked call virtual function
        //Call stopperfusion
        stopperfusion();
    }
    else if (&src == &btn_Start)
    {
        //checkparameters
        //When btn_Start clicked delay
        //Delay for 1 ms (1 Ticks)
        checkparametersCounter = CHECKPARAMETERS_DURATION;

        //start
        //When btn_Start clicked call virtual function
        //Call startperfusion
        startperfusion();
    }
    else if (&src == &Settings)
    {
        //gotosettings
        //When Settings clicked change screen to Settings__screen
        //Go to Settings__screen with no screen transition
        application().gotoSettings__screenScreenNoTransition();
    }
    else if (&src == &flexButtonRate)
    {
        //setvartorate
        //When flexButtonRate clicked call virtual function
        //Call ratevar
        ratevar();

        //gotokeyboardafterrate
        //When setvartorate completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &Mode)
    {
        //MODECHANGE
        //When Mode clicked call virtual function
        //Call changemode
        changemode();
    }
    else if (&src == &btn_slect_drug)
    {
        //ITgotoselectdrug
        //When btn_slect_drug clicked change screen to Screenselectdrug
        //Go to Screenselectdrug with no screen transition
        application().gotoScreenselectdrugScreenNoTransition();
    }
    else if (&src == &flexButton3_1)
    {
        //Interaction13
        //When flexButton3_1 clicked change screen to testVersion
        //Go to testVersion with no screen transition
        application().gototestVersionScreenNoTransition();
    }
    else if (&src == &flexButtonvolumemain)
    {
        //setvarvolume2
        //When flexButtonvolumemain clicked call virtual function
        //Call ratevarvolume
        ratevarvolume();

        //gotokeyboardvolumemain
        //When setvarvolume2 completed change screen to KeyboardNB
        //Go to KeyboardNB with no screen transition
        application().gotoKeyboardNBScreenNoTransition();
    }
    else if (&src == &flexButtontimemain)
    {
        //timeparametersmain
        //When flexButtontimemain clicked change screen to timeparam
        //Go to timeparam with no screen transition
        application().gototimeparamScreenNoTransition();
    }
    else if (&src == &Syringe)
    {
        //goTosyringe
        //When Syringe clicked change screen to syringedetected
        //Go to syringedetected with no screen transition
        application().gotosyringedetectedScreenNoTransition();
    }
    else if (&src == &DoneButton)
    {
        //closepurgepopup
        //When DoneButton clicked call virtual function
        //Call Closepurgepopup
        Closepurgepopup();
    }
    else if (&src == &PurgeButton)
    {
        //purgeInteraction
        //When PurgeButton clicked call virtual function
        //Call purgeClicked
        purgeClicked();
    }
    else if (&src == &CLoseeventpopUp)
    {
        //Interaction16
        //When CLoseeventpopUp clicked call virtual function
        //Call outofeventpop
        outofeventpop();
    }
    else if (&src == &CLosepopUp)
    {
        //closepopup
        //When CLosepopUp clicked call virtual function
        //Call outofpopup
        outofpopup();
    }
    else if (&src == &MuteBtn)
    {
        //Interaction15
        //When MuteBtn clicked call virtual function
        //Call MuteF
        MuteF();
    }
    else if (&src == &Unlock)
    {
        //Interaction14
        //When Unlock clicked change screen to LockScreen
        //Go to LockScreen with no screen transition
        application().gotoLockScreenScreenNoTransition();
    }
}
