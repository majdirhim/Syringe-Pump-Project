/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/specialmode_screen/SpecialModeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SpecialModeViewBase::SpecialModeViewBase() :
    buttonCallback(this, &SpecialModeViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &SpecialModeViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    BackendBlack.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND3_ID));
    BackendBlack.setPosition(0, 0, 480, 272);
    BackendBlack.setVisible(false);
    BackendBlack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    BackendChildren.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND4_ID));
    BackendChildren.setPosition(0, 0, 481, 272);
    BackendChildren.setVisible(false);
    BackendChildren.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    backend.setXY(1, 0);
    backend.setBitmap(touchgfx::Bitmap(BITMAP_MINI_BACKEND2_ID));

    buttonWithmale.setXY(61, 106);
    buttonWithmale.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_LARGE_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_LARGE_PRESSED_ID));
    buttonWithmale.setLabelText(touchgfx::TypedText(T___SINGLEUSE_7E96));
    buttonWithmale.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithmale.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithmale.setAction(buttonCallback);

    buttonWithfemale.setXY(61, 202);
    buttonWithfemale.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_LARGE_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_LARGE_PRESSED_ID));
    buttonWithfemale.setLabelText(touchgfx::TypedText(T___SINGLEUSE_VVBX));
    buttonWithfemale.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithfemale.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithfemale.setAction(buttonCallback);

    box1.setPosition(378, 10, 95, 32);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1.setAlpha(90);

    Back.setIconBitmaps(Bitmap(BITMAP_GROUPE49_ID), Bitmap(BITMAP_GROUPE49_ID));
    Back.setIconXY(16, 9);
    Back.setText(TypedText(T___SINGLEUSE_S7CA));
    Back.setTextPosition(23, 6, 95, 32);
    Back.setTextColors(touchgfx::Color::getColorFromRGB(245, 245, 245), touchgfx::Color::getColorFromRGB(242, 242, 242));
    Back.setPosition(378, 10, 95, 32);
    Back.setAction(flexButtonCallback);

    add(__background);
    add(BackendBlack);
    add(BackendChildren);
    add(backend);
    add(buttonWithmale);
    add(buttonWithfemale);
    add(box1);
    add(Back);
}

void SpecialModeViewBase::setupScreen()
{

}

void SpecialModeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithmale)
    {
        //Interaction3
        //When buttonWithmale clicked change screen to mainScreen_WithSTART
        //Go to mainScreen_WithSTART with no screen transition
        application().gotomainScreen_WithSTARTScreenNoTransition();
    }
    else if (&src == &buttonWithfemale)
    {
        //Interaction2
        //When buttonWithfemale clicked change screen to mainScreen_WithSTART
        //Go to mainScreen_WithSTART with no screen transition
        application().gotomainScreen_WithSTARTScreenNoTransition();
    }
}

void SpecialModeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Back)
    {
        //Back
        //When Back clicked change screen to startup
        //Go to startup with no screen transition
        application().gotostartupScreenNoTransition();
    }
}
