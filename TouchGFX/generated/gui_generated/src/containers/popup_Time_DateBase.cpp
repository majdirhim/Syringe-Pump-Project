/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/popup_Time_DateBase.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

popup_Time_DateBase::popup_Time_DateBase() :
    buttonCallback(this, &popup_Time_DateBase::buttonCallbackHandler)
{
    setWidth(480);
    setHeight(272);
    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_MINI_BACKEND2_ID));

    customContainer11.setXY(86, 46);

    customContainer11_1.setXY(308, 46);

    textareahourcaption.setPosition(86, 46, 77, 24);
    textareahourcaption.setColor(touchgfx::Color::getColorFromRGB(241, 241, 241));
    textareahourcaption.setLinespacing(0);
    textareahourcaption.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AXQ3));

    textaearHour.setPosition(87, 70, 77, 51);
    textaearHour.setColor(touchgfx::Color::getColorFromRGB(241, 241, 241));
    textaearHour.setLinespacing(0);
    Unicode::snprintf(textaearHourBuffer, TEXTAEARHOUR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_06AA).getText());
    textaearHour.setWildcard(textaearHourBuffer);
    textaearHour.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6WTV));

    textareaminutecaption.setPosition(309, 46, 77, 24);
    textareaminutecaption.setColor(touchgfx::Color::getColorFromRGB(241, 241, 241));
    textareaminutecaption.setLinespacing(0);
    textareaminutecaption.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CJKT));

    textAreaminute.setPosition(311, 70, 77, 50);
    textAreaminute.setColor(touchgfx::Color::getColorFromRGB(241, 241, 241));
    textAreaminute.setLinespacing(0);
    Unicode::snprintf(textAreaminuteBuffer, TEXTAREAMINUTE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EZX9).getText());
    textAreaminute.setWildcard(textAreaminuteBuffer);
    textAreaminute.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T9X7));

    buttonhourup.setXY(180, 51);
    buttonhourup.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonhourup.setAction(buttonCallback);

    buttonhourdown.setXY(180, 93);
    buttonhourdown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttonhourdown.setAction(buttonCallback);

    buttonminuteup.setXY(266, 51);
    buttonminuteup.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonminuteup.setAction(buttonCallback);

    buttonminutedown.setXY(266, 93);
    buttonminutedown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttonminutedown.setAction(buttonCallback);

    buttonclock.setXY(192, 169);
    buttonclock.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_ROUND_ID), touchgfx::Bitmap(BITMAP_BTN_ROUND_PRESSED_ID));
    buttonclock.setLabelText(touchgfx::TypedText(T___SINGLEUSE_0M3L));
    buttonclock.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonclock.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));

    add(image1);
    add(customContainer11);
    add(customContainer11_1);
    add(textareahourcaption);
    add(textaearHour);
    add(textareaminutecaption);
    add(textAreaminute);
    add(buttonhourup);
    add(buttonhourdown);
    add(buttonminuteup);
    add(buttonminutedown);
    add(buttonclock);
}

void popup_Time_DateBase::initialize()
{
    customContainer11.initialize();
    customContainer11_1.initialize();
}

void popup_Time_DateBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonhourup)
    {
        //Hour_up
        //When buttonhourup clicked call virtual function
        //Call buttonhourupclicked
        buttonhourupclicked();
    }
    else if (&src == &buttonhourdown)
    {
        //Hour_down
        //When buttonhourdown clicked call virtual function
        //Call buttonhourdownclicked
        buttonhourdownclicked();
    }
    else if (&src == &buttonminuteup)
    {
        //minute_up
        //When buttonminuteup clicked call virtual function
        //Call buttonminuteupclicked
        buttonminuteupclicked();
    }
    else if (&src == &buttonminutedown)
    {
        //minute_down
        //When buttonminutedown clicked call virtual function
        //Call buttonminutedownclicked
        buttonminutedownclicked();
    }
}

