/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/same_patient_screen/Same_PatientViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Same_PatientViewBase::Same_PatientViewBase() :
    waitCounter(0),
    buttonCallback(this, &Same_PatientViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Same_PatientViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    BackendBlack.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND3_ID));
    BackendBlack.setPosition(0, 0, 480, 272);
    BackendBlack.setVisible(false);
    BackendBlack.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    BackendChildren.setBitmap(touchgfx::Bitmap(BITMAP_BACKEND4_ID));
    BackendChildren.setPosition(0, 0, 481, 272);
    BackendChildren.setVisible(false);
    BackendChildren.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    backend.setXY(-1, 0);
    backend.setBitmap(touchgfx::Bitmap(BITMAP_MINI_BACKEND2_ID));

    ScrollContainer.setPosition(0, 44, 388, 228);
    ScrollContainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    boxWithBorderName.setPosition(95, 1, 280, 40);
    boxWithBorderName.setColor(touchgfx::Color::getColorFromRGB(120, 204, 228));
    boxWithBorderName.setBorderColor(touchgfx::Color::getColorFromRGB(14, 106, 175));
    boxWithBorderName.setBorderSize(2);
    ScrollContainer.add(boxWithBorderName);

    textAreaName.setPosition(100, 11, 270, 23);
    textAreaName.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaName.setLinespacing(0);
    textAreaNameBuffer[0] = 0;
    textAreaName.setWildcard(textAreaNameBuffer);
    textAreaName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I437));
    ScrollContainer.add(textAreaName);

    Name.setXY(22, 5);
    Name.setColor(touchgfx::Color::getColorFromRGB(255, 249, 249));
    Name.setLinespacing(0);
    Name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JUTA));
    ScrollContainer.add(Name);

    boxWithBorderWeight.setPosition(95, 47, 280, 40);
    boxWithBorderWeight.setColor(touchgfx::Color::getColorFromRGB(120, 204, 228));
    boxWithBorderWeight.setBorderColor(touchgfx::Color::getColorFromRGB(14, 106, 175));
    boxWithBorderWeight.setBorderSize(2);
    ScrollContainer.add(boxWithBorderWeight);

    textAreaWeight.setPosition(100, 57, 270, 23);
    textAreaWeight.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaWeight.setLinespacing(0);
    textAreaWeightBuffer[0] = 0;
    textAreaWeight.setWildcard(textAreaWeightBuffer);
    textAreaWeight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NQ7A));
    ScrollContainer.add(textAreaWeight);

    Weight.setXY(16, 51);
    Weight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Weight.setLinespacing(0);
    Weight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O7OC));
    ScrollContainer.add(Weight);

    boxWithBorderAge.setPosition(95, 92, 280, 40);
    boxWithBorderAge.setColor(touchgfx::Color::getColorFromRGB(120, 204, 228));
    boxWithBorderAge.setBorderColor(touchgfx::Color::getColorFromRGB(14, 106, 175));
    boxWithBorderAge.setBorderSize(2);
    ScrollContainer.add(boxWithBorderAge);

    textAreaAge.setPosition(99, 102, 270, 23);
    textAreaAge.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaAge.setLinespacing(0);
    textAreaAgeBuffer[0] = 0;
    textAreaAge.setWildcard(textAreaAgeBuffer);
    textAreaAge.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F4FV));
    ScrollContainer.add(textAreaAge);

    Age.setXY(34, 97);
    Age.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Age.setLinespacing(0);
    Age.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J39L));
    ScrollContainer.add(Age);

    boxWithBorderHeight.setPosition(95, 136, 280, 40);
    boxWithBorderHeight.setColor(touchgfx::Color::getColorFromRGB(120, 204, 228));
    boxWithBorderHeight.setBorderColor(touchgfx::Color::getColorFromRGB(14, 106, 175));
    boxWithBorderHeight.setBorderSize(2);
    ScrollContainer.add(boxWithBorderHeight);

    textAreaHeight.setPosition(99, 146, 270, 23);
    textAreaHeight.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaHeight.setLinespacing(0);
    textAreaHeightBuffer[0] = 0;
    textAreaHeight.setWildcard(textAreaHeightBuffer);
    textAreaHeight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4MOO));
    ScrollContainer.add(textAreaHeight);

    Height.setXY(15, 142);
    Height.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Height.setLinespacing(0);
    Height.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EVNT));
    ScrollContainer.add(Height);

    boxWithBorderGender.setPosition(95, 179, 280, 40);
    boxWithBorderGender.setColor(touchgfx::Color::getColorFromRGB(120, 204, 228));
    boxWithBorderGender.setBorderColor(touchgfx::Color::getColorFromRGB(14, 106, 175));
    boxWithBorderGender.setBorderSize(2);
    ScrollContainer.add(boxWithBorderGender);

    Gender.setXY(13, 185);
    Gender.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Gender.setLinespacing(0);
    Gender.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6EXR));
    ScrollContainer.add(Gender);

    textAreaGender.setPosition(99, 188, 270, 23);
    textAreaGender.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaGender.setLinespacing(0);
    textAreaGenderBuffer[0] = 0;
    textAreaGender.setWildcard(textAreaGenderBuffer);
    textAreaGender.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61NP));
    ScrollContainer.add(textAreaGender);

    button.setXY(412, 120);
    button.setBitmaps(touchgfx::Bitmap(BITMAP_GROUPE2_ID), touchgfx::Bitmap(BITMAP_GROUPE2_ID));
    button.setAction(buttonCallback);

    WaitPopUp.setBackground(touchgfx::BitmapId(BITMAP_FLAT_HOURGLASS2_ID), 208, 104);
    WaitPopUp.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    WaitPopUp.setShadeAlpha(200);

    WaitAnimation.setXY(12, 13);
    WaitAnimation.setBitmaps(BITMAP_MINI_FLAT_HOURGLASS_0_ID, BITMAP_MINI_FLAT_HOURGLASS_321_ID);
    WaitAnimation.setUpdateTicksInterval(6);
    WaitAnimation.startAnimation(false, true, true);
    WaitPopUp.add(WaitAnimation);

    nodata.setPosition(-24, 86, 258, 51);
    nodata.setVisible(false);
    nodata.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    nodata.setLinespacing(0);
    nodata.setTypedText(touchgfx::TypedText(T___SINGLEUSE_58OY));
    WaitPopUp.add(nodata);

    Back.setIconBitmaps(Bitmap(BITMAP_GROUPE49_ID), Bitmap(BITMAP_GROUPE49_ID));
    Back.setIconXY(16, 9);
    Back.setText(TypedText(T___SINGLEUSE_XSLF));
    Back.setTextPosition(23, 6, 95, 32);
    Back.setTextColors(touchgfx::Color::getColorFromRGB(245, 245, 245), touchgfx::Color::getColorFromRGB(242, 242, 242));
    Back.setPosition(378, 10, 95, 32);
    Back.setAction(flexButtonCallback);

    box1.setPosition(378, 10, 95, 32);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box1.setAlpha(90);

    add(__background);
    add(BackendBlack);
    add(BackendChildren);
    add(backend);
    add(ScrollContainer);
    add(button);
    add(WaitPopUp);
    add(Back);
    add(box1);
}

void Same_PatientViewBase::setupScreen()
{

    //getparam
    //When screen transition begins call virtual function
    //Call GetStoredParam
    GetStoredParam();

    //wait
    //When getparam completed delay
    //Delay for 1000 ms (60 Ticks)
    waitCounter = WAIT_DURATION;

}

//Handles delays
void Same_PatientViewBase::handleTickEvent()
{
    if(waitCounter > 0)
    {
        waitCounter--;
        if(waitCounter == 0)
        {
            //testdata
            //When wait completed call virtual function
            //Call testdata
            testdata();
        }
    }
}

void Same_PatientViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button)
    {
        //Main
        //When button clicked change screen to mainScreen_WithSTART
        //Go to mainScreen_WithSTART with no screen transition
        application().gotomainScreen_WithSTARTScreenNoTransition();
    }
}

void Same_PatientViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Back)
    {
        //Back
        //When Back clicked change screen to startup
        //Go to startup with no screen transition
        application().gotostartupScreenNoTransition();
    }
}
